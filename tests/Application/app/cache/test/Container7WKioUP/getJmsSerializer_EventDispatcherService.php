<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'jms_serializer.event_dispatcher' shared service.

$this->privates['jms_serializer.event_dispatcher'] = $instance = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher(new \Symfony\Component\DependencyInjection\ServiceLocator(array('hateoas.event_subscriber.json' => function () {
    return ($this->services['hateoas.event_subscriber.json'] ?? $this->load('getHateoas_EventSubscriber_JsonService.php'));
}, 'hateoas.event_subscriber.xml' => function () {
    return ($this->services['hateoas.event_subscriber.xml'] ?? $this->load('getHateoas_EventSubscriber_XmlService.php'));
}, 'jms_serializer.doctrine_proxy_subscriber' => function () {
    return ($this->services['jms_serializer.doctrine_proxy_subscriber'] ?? $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber(true, false));
}, 'jms_serializer.stopwatch_subscriber' => function () {
    return ($this->services['jms_serializer.stopwatch_subscriber'] ?? $this->load('getJmsSerializer_StopwatchSubscriberService.php'));
})));

$instance->setListeners(array('serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerializeTypedProxy'), 1 => NULL, 2 => NULL), 2 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL)), 'serializer.post_serialize' => array(0 => array(0 => array(0 => 'hateoas.event_subscriber.xml', 1 => 'onPostSerialize'), 1 => NULL, 2 => 'xml'), 1 => array(0 => array(0 => 'hateoas.event_subscriber.json', 1 => 'onPostSerialize'), 1 => NULL, 2 => 'json'), 2 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL))));

return $instance;
