<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('odiseo_blog.form.type.article' => function () {
    return ($this->privates['odiseo_blog.form.type.article'] ?? $this->privates['odiseo_blog.form.type.article'] = new \Odiseo\BlogBundle\Form\Type\ArticleType('Odiseo\\BlogBundle\\Model\\Article', array(0 => 'odiseo')));
}, 'odiseo_blog.form.type.article_translation' => function () {
    return ($this->privates['odiseo_blog.form.type.article_translation'] ?? $this->privates['odiseo_blog.form.type.article_translation'] = new \Odiseo\BlogBundle\Form\Type\ArticleTranslationType('Odiseo\\BlogBundle\\Model\\ArticleTranslation', array(0 => 'odiseo')));
}, 'odiseo_blog.form.type.article_category' => function () {
    return ($this->privates['odiseo_blog.form.type.article_category'] ?? $this->privates['odiseo_blog.form.type.article_category'] = new \Odiseo\BlogBundle\Form\Type\ArticleCategoryType('Odiseo\\BlogBundle\\Model\\ArticleCategory', array(0 => 'odiseo')));
}, 'odiseo_blog.form.type.article_category_translation' => function () {
    return ($this->privates['odiseo_blog.form.type.article_category_translation'] ?? $this->privates['odiseo_blog.form.type.article_category_translation'] = new \Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType('Odiseo\\BlogBundle\\Model\\ArticleCategoryTranslation', array(0 => 'odiseo')));
}, 'controller_name_converter' => function () {
    return ($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'argument_metadata_factory' => function () {
    return ($this->privates['argument_metadata_factory'] ?? $this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory());
}, 'response_listener' => function () {
    return ($this->privates['response_listener'] ?? $this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8'));
}, 'streamed_response_listener' => function () {
    return ($this->privates['streamed_response_listener'] ?? $this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener());
}, 'locale_listener' => function () {
    return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
}, 'validate_request_listener' => function () {
    return ($this->privates['validate_request_listener'] ?? $this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener());
}, 'resolve_controller_name_subscriber' => function () {
    return ($this->privates['resolve_controller_name_subscriber'] ?? $this->getResolveControllerNameSubscriberService());
}, 'parameter_bag' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'file_locator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2])));
}, 'config_cache_factory' => function () {
    return ($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService());
}, 'dependency_injection.config.container_parameters_resource_checker' => function () {
    return ($this->privates['dependency_injection.config.container_parameters_resource_checker'] ?? $this->privates['dependency_injection.config.container_parameters_resource_checker'] = new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($this));
}, 'config.resource.self_checking_resource_checker' => function () {
    return ($this->privates['config.resource.self_checking_resource_checker'] ?? $this->privates['config.resource.self_checking_resource_checker'] = new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker());
}, 'fragment.handler' => function () {
    return ($this->privates['fragment.handler'] ?? $this->load('getFragment_HandlerService.php'));
}, 'fragment.renderer.inline' => function () {
    return ($this->privates['fragment.renderer.inline'] ?? $this->load('getFragment_Renderer_InlineService.php'));
}, 'console.error_listener' => function () {
    return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService.php'));
}, 'console.command.about' => function () {
    return ($this->privates['console.command.about'] ?? $this->load('getConsole_Command_AboutService.php'));
}, 'console.command.assets_install' => function () {
    return ($this->privates['console.command.assets_install'] ?? $this->load('getConsole_Command_AssetsInstallService.php'));
}, 'console.command.cache_clear' => function () {
    return ($this->privates['console.command.cache_clear'] ?? $this->load('getConsole_Command_CacheClearService.php'));
}, 'console.command.cache_pool_clear' => function () {
    return ($this->privates['console.command.cache_pool_clear'] ?? $this->load('getConsole_Command_CachePoolClearService.php'));
}, 'console.command.cache_pool_prune' => function () {
    return ($this->privates['console.command.cache_pool_prune'] ?? $this->load('getConsole_Command_CachePoolPruneService.php'));
}, 'console.command.cache_pool_delete' => function () {
    return ($this->privates['console.command.cache_pool_delete'] ?? $this->load('getConsole_Command_CachePoolDeleteService.php'));
}, 'console.command.cache_warmup' => function () {
    return ($this->privates['console.command.cache_warmup'] ?? $this->load('getConsole_Command_CacheWarmupService.php'));
}, 'console.command.config_debug' => function () {
    return ($this->privates['console.command.config_debug'] ?? $this->load('getConsole_Command_ConfigDebugService.php'));
}, 'console.command.config_dump_reference' => function () {
    return ($this->privates['console.command.config_dump_reference'] ?? $this->load('getConsole_Command_ConfigDumpReferenceService.php'));
}, 'console.command.container_debug' => function () {
    return ($this->privates['console.command.container_debug'] ?? $this->load('getConsole_Command_ContainerDebugService.php'));
}, 'console.command.debug_autowiring' => function () {
    return ($this->privates['console.command.debug_autowiring'] ?? $this->load('getConsole_Command_DebugAutowiringService.php'));
}, 'console.command.event_dispatcher_debug' => function () {
    return ($this->privates['console.command.event_dispatcher_debug'] ?? $this->load('getConsole_Command_EventDispatcherDebugService.php'));
}, 'console.command.router_debug' => function () {
    return ($this->privates['console.command.router_debug'] ?? $this->load('getConsole_Command_RouterDebugService.php'));
}, 'console.command.router_match' => function () {
    return ($this->privates['console.command.router_match'] ?? $this->load('getConsole_Command_RouterMatchService.php'));
}, 'console.command.translation_debug' => function () {
    return ($this->privates['console.command.translation_debug'] ?? $this->load('getConsole_Command_TranslationDebugService.php'));
}, 'console.command.translation_update' => function () {
    return ($this->privates['console.command.translation_update'] ?? $this->load('getConsole_Command_TranslationUpdateService.php'));
}, 'console.command.xliff_lint' => function () {
    return ($this->privates['console.command.xliff_lint'] ?? $this->load('getConsole_Command_XliffLintService.php'));
}, 'console.command.yaml_lint' => function () {
    return ($this->privates['console.command.yaml_lint'] ?? $this->load('getConsole_Command_YamlLintService.php'));
}, 'console.command.form_debug' => function () {
    return ($this->privates['console.command.form_debug'] ?? $this->load('getConsole_Command_FormDebugService.php'));
}, 'cache.validator' => function () {
    return ($this->privates['cache.validator'] ?? $this->load('getCache_ValidatorService.php'));
}, 'cache.annotations' => function () {
    return ($this->privates['cache.annotations'] ?? $this->load('getCache_AnnotationsService.php'));
}, 'cache.default_clearer' => function () {
    return ($this->services['cache.app_clearer'] ?? $this->load('getCache_AppClearerService.php'));
}, 'translator.selector' => function () {
    return ($this->privates['translator.selector'] ?? $this->privates['translator.selector'] = new \Symfony\Component\Translation\MessageSelector());
}, 'test.client.history' => function () {
    return new \Symfony\Component\BrowserKit\History();
}, 'test.client.cookiejar' => function () {
    return new \Symfony\Component\BrowserKit\CookieJar();
}, 'test.session.listener' => function () {
    return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
}, 'session.storage.metadata_bag' => function () {
    return ($this->privates['session.storage.metadata_bag'] ?? $this->privates['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0'));
}, 'session.flash_bag' => function () {
    return ($this->privates['session.flash_bag'] ?? $this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
}, 'session.attribute_bag' => function () {
    return ($this->privates['session.attribute_bag'] ?? $this->privates['session.attribute_bag'] = new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag());
}, 'session.storage.mock_file' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'session_listener' => function () {
    return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
}, 'security.csrf.token_generator' => function () {
    return ($this->privates['security.csrf.token_generator'] ?? $this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator());
}, 'security.csrf.token_storage' => function () {
    return ($this->privates['security.csrf.token_storage'] ?? $this->load('getSecurity_Csrf_TokenStorageService.php'));
}, 'twig.runtime.security_csrf' => function () {
    return ($this->privates['twig.runtime.security_csrf'] ?? $this->load('getTwig_Runtime_SecurityCsrfService.php'));
}, 'twig.extension.security_csrf' => function () {
    return ($this->privates['twig.extension.security_csrf'] ?? $this->privates['twig.extension.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfExtension());
}, 'form.resolved_type_factory' => function () {
    return ($this->privates['form.resolved_type_factory'] ?? $this->privates['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory());
}, 'form.registry' => function () {
    return ($this->privates['form.registry'] ?? $this->load('getForm_RegistryService.php'));
}, 'form.extension' => function () {
    return ($this->privates['form.extension'] ?? $this->load('getForm_ExtensionService.php'));
}, 'form.type_guesser.validator' => function () {
    return ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
}, 'form.choice_list_factory.default' => function () {
    return ($this->privates['form.choice_list_factory.default'] ?? $this->privates['form.choice_list_factory.default'] = new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory());
}, 'form.choice_list_factory.property_access' => function () {
    return ($this->privates['form.choice_list_factory.property_access'] ?? $this->load('getForm_ChoiceListFactory_PropertyAccessService.php'));
}, 'form.choice_list_factory.cached' => function () {
    return ($this->privates['form.choice_list_factory.cached'] ?? $this->load('getForm_ChoiceListFactory_CachedService.php'));
}, 'form.type.form' => function () {
    return ($this->privates['form.type.form'] ?? $this->load('getForm_Type_FormService.php'));
}, 'form.type.choice' => function () {
    return ($this->privates['form.type.choice'] ?? $this->load('getForm_Type_ChoiceService.php'));
}, 'form.type_extension.form.http_foundation' => function () {
    return ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
}, 'form.server_params' => function () {
    return ($this->privates['form.server_params'] ?? $this->load('getForm_ServerParamsService.php'));
}, 'form.type_extension.form.validator' => function () {
    return ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
}, 'form.type_extension.repeated.validator' => function () {
    return ($this->privates['form.type_extension.repeated.validator'] ?? $this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
}, 'form.type_extension.submit.validator' => function () {
    return ($this->privates['form.type_extension.submit.validator'] ?? $this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
}, 'form.type_extension.upload.validator' => function () {
    return ($this->privates['form.type_extension.upload.validator'] ?? $this->load('getForm_TypeExtension_Upload_ValidatorService.php'));
}, 'form.type_extension.csrf' => function () {
    return ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
}, 'assets.packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->load('getAssets_PackagesService.php'));
}, 'assets.context' => function () {
    return ($this->privates['assets.context'] ?? $this->load('getAssets_ContextService.php'));
}, 'assets.empty_version_strategy' => function () {
    return ($this->privates['assets.empty_version_strategy'] ?? $this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy());
}, 'assets._default_package' => function () {
    return ($this->privates['assets._default_package'] ?? $this->load('getAssets_DefaultPackageService.php'));
}, 'templating.name_parser' => function () {
    return ($this->privates['templating.name_parser'] ?? $this->privates['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'templating.filename_parser' => function () {
    return ($this->privates['templating.filename_parser'] ?? $this->privates['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser());
}, 'templating.locator' => function () {
    return ($this->privates['templating.locator'] ?? $this->load('getTemplating_LocatorService.php'));
}, 'templating.finder' => function () {
    return ($this->privates['templating.finder'] ?? $this->load('getTemplating_FinderService.php'));
}, 'templating.cache_warmer.template_paths' => function () {
    return ($this->privates['templating.cache_warmer.template_paths'] ?? $this->load('getTemplating_CacheWarmer_TemplatePathsService.php'));
}, 'templating.loader.filesystem' => function () {
    return ($this->services['templating.loader'] ?? $this->load('getTemplating_LoaderService.php'));
}, 'validator.builder' => function () {
    return ($this->privates['validator.builder'] ?? $this->load('getValidator_BuilderService.php'));
}, 'validator.mapping.cache_warmer' => function () {
    return ($this->privates['validator.mapping.cache_warmer'] ?? $this->load('getValidator_Mapping_CacheWarmerService.php'));
}, 'validator.validator_factory' => function () {
    return ($this->privates['validator.validator_factory'] ?? $this->load('getValidator_ValidatorFactoryService.php'));
}, 'validator.expression' => function () {
    return ($this->privates['validator.expression'] ?? $this->privates['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator());
}, 'validator.email' => function () {
    return ($this->privates['validator.email'] ?? $this->privates['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator('loose'));
}, 'translator.default' => function () {
    return ($this->services['translator'] ?? $this->getTranslatorService());
}, 'translator.formatter.default' => function () {
    return ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService());
}, 'translation.loader.php' => function () {
    return ($this->privates['translation.loader.php'] ?? $this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader());
}, 'translation.loader.yml' => function () {
    return ($this->privates['translation.loader.yml'] ?? $this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader());
}, 'translation.loader.xliff' => function () {
    return ($this->privates['translation.loader.xliff'] ?? $this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader());
}, 'translation.loader.po' => function () {
    return ($this->privates['translation.loader.po'] ?? $this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader());
}, 'translation.loader.mo' => function () {
    return ($this->privates['translation.loader.mo'] ?? $this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader());
}, 'translation.loader.qt' => function () {
    return ($this->privates['translation.loader.qt'] ?? $this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader());
}, 'translation.loader.csv' => function () {
    return ($this->privates['translation.loader.csv'] ?? $this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader());
}, 'translation.loader.res' => function () {
    return ($this->privates['translation.loader.res'] ?? $this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader());
}, 'translation.loader.dat' => function () {
    return ($this->privates['translation.loader.dat'] ?? $this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader());
}, 'translation.loader.ini' => function () {
    return ($this->privates['translation.loader.ini'] ?? $this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader());
}, 'translation.loader.json' => function () {
    return ($this->privates['translation.loader.json'] ?? $this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader());
}, 'translation.dumper.php' => function () {
    return ($this->privates['translation.dumper.php'] ?? $this->privates['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper());
}, 'translation.dumper.xliff' => function () {
    return ($this->privates['translation.dumper.xliff'] ?? $this->privates['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper());
}, 'translation.dumper.po' => function () {
    return ($this->privates['translation.dumper.po'] ?? $this->privates['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper());
}, 'translation.dumper.mo' => function () {
    return ($this->privates['translation.dumper.mo'] ?? $this->privates['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper());
}, 'translation.dumper.yml' => function () {
    return ($this->privates['translation.dumper.yml'] ?? $this->privates['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper());
}, 'translation.dumper.yaml' => function () {
    return ($this->privates['translation.dumper.yaml'] ?? $this->privates['translation.dumper.yaml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper('yaml'));
}, 'translation.dumper.qt' => function () {
    return ($this->privates['translation.dumper.qt'] ?? $this->privates['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper());
}, 'translation.dumper.csv' => function () {
    return ($this->privates['translation.dumper.csv'] ?? $this->privates['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper());
}, 'translation.dumper.ini' => function () {
    return ($this->privates['translation.dumper.ini'] ?? $this->privates['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper());
}, 'translation.dumper.json' => function () {
    return ($this->privates['translation.dumper.json'] ?? $this->privates['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper());
}, 'translation.dumper.res' => function () {
    return ($this->privates['translation.dumper.res'] ?? $this->privates['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper());
}, 'translation.extractor.php' => function () {
    return ($this->privates['translation.extractor.php'] ?? $this->privates['translation.extractor.php'] = new \Symfony\Component\Translation\Extractor\PhpExtractor());
}, 'translation.reader' => function () {
    return ($this->privates['translation.reader'] ?? $this->load('getTranslation_ReaderService.php'));
}, 'translation.extractor' => function () {
    return ($this->privates['translation.extractor'] ?? $this->load('getTranslation_ExtractorService.php'));
}, 'translation.writer' => function () {
    return ($this->privates['translation.writer'] ?? $this->load('getTranslation_WriterService.php'));
}, 'translation.warmer' => function () {
    return ($this->privates['translation.warmer'] ?? $this->load('getTranslation_WarmerService.php'));
}, 'translator_listener' => function () {
    return ($this->privates['translator_listener'] ?? $this->getTranslatorListenerService());
}, 'cache.property_access' => function () {
    return ($this->privates['cache.property_access'] ?? $this->privates['cache.property_access'] = new \Symfony\Component\Cache\Adapter\ArrayAdapter(0, false));
}, 'debug.debug_handlers_listener' => function () {
    return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
}, 'debug.file_link_formatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'debug.stopwatch' => function () {
    return ($this->privates['debug.stopwatch'] ?? $this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true));
}, 'debug.event_dispatcher' => function () {
    return ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
}, 'debug.controller_resolver' => function () {
    return ($this->privates['debug.controller_resolver'] ?? $this->getDebug_ControllerResolverService());
}, 'debug.argument_resolver' => function () {
    return ($this->privates['debug.argument_resolver'] ?? $this->getDebug_ArgumentResolverService());
}, 'routing.resolver' => function () {
    return ($this->privates['routing.resolver'] ?? $this->load('getRouting_ResolverService.php'));
}, 'routing.loader.xml' => function () {
    return ($this->privates['routing.loader.xml'] ?? $this->load('getRouting_Loader_XmlService.php'));
}, 'routing.loader.yml' => function () {
    return ($this->privates['routing.loader.yml'] ?? $this->load('getRouting_Loader_YmlService.php'));
}, 'routing.loader.php' => function () {
    return ($this->privates['routing.loader.php'] ?? $this->load('getRouting_Loader_PhpService.php'));
}, 'routing.loader.glob' => function () {
    return ($this->privates['routing.loader.glob'] ?? $this->load('getRouting_Loader_GlobService.php'));
}, 'routing.loader.directory' => function () {
    return ($this->privates['routing.loader.directory'] ?? $this->load('getRouting_Loader_DirectoryService.php'));
}, 'routing.loader.service' => function () {
    return ($this->privates['routing.loader.service'] ?? $this->privates['routing.loader.service'] = new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
}, 'router.default' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'router.request_context' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'router.cache_warmer' => function () {
    return ($this->privates['router.cache_warmer'] ?? $this->load('getRouter_CacheWarmerService.php'));
}, 'router_listener' => function () {
    return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
}, 'routing.loader.annotation' => function () {
    return ($this->privates['routing.loader.annotation'] ?? $this->load('getRouting_Loader_AnnotationService.php'));
}, 'routing.loader.annotation.directory' => function () {
    return ($this->privates['routing.loader.annotation.directory'] ?? $this->load('getRouting_Loader_Annotation_DirectoryService.php'));
}, 'routing.loader.annotation.file' => function () {
    return ($this->privates['routing.loader.annotation.file'] ?? $this->load('getRouting_Loader_Annotation_FileService.php'));
}, 'annotations.reader' => function () {
    return ($this->privates['annotations.reader'] ?? $this->load('getAnnotations_ReaderService.php'));
}, 'annotations.dummy_registry' => function () {
    return ($this->privates['annotations.dummy_registry'] ?? $this->load('getAnnotations_DummyRegistryService.php'));
}, 'annotations.cached_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'annotations.cache_warmer' => function () {
    return ($this->privates['annotations.cache_warmer'] ?? $this->load('getAnnotations_CacheWarmerService.php'));
}, 'annotations.cache' => function () {
    return ($this->privates['annotations.cache'] ?? $this->load('getAnnotations_CacheService.php'));
}, 'property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->load('getPropertyAccessorService.php'));
}, 'twig.app_variable' => function () {
    return ($this->privates['twig.app_variable'] ?? $this->load('getTwig_AppVariableService.php'));
}, 'twig.cache_warmer' => function () {
    return ($this->privates['twig.cache_warmer'] ?? $this->load('getTwig_CacheWarmerService.php'));
}, 'twig.template_iterator' => function () {
    return ($this->privates['twig.template_iterator'] ?? $this->privates['twig.template_iterator'] = new \Symfony\Bundle\TwigBundle\TemplateIterator(($this->services['kernel'] ?? $this->get('kernel', 1)), $this->targetDirs[2], array(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form') => NULL)));
}, 'twig.template_cache_warmer' => function () {
    return ($this->privates['twig.template_cache_warmer'] ?? $this->load('getTwig_TemplateCacheWarmerService.php'));
}, 'twig.extension.profiler' => function () {
    return ($this->privates['twig.extension.profiler'] ?? $this->load('getTwig_Extension_ProfilerService.php'));
}, 'twig.profile' => function () {
    return ($this->privates['twig.profile'] ?? $this->privates['twig.profile'] = new \Twig\Profiler\Profile());
}, 'twig.extension.trans' => function () {
    return ($this->privates['twig.extension.trans'] ?? $this->load('getTwig_Extension_TransService.php'));
}, 'twig.extension.assets' => function () {
    return ($this->privates['twig.extension.assets'] ?? $this->load('getTwig_Extension_AssetsService.php'));
}, 'twig.extension.code' => function () {
    return ($this->privates['twig.extension.code'] ?? $this->load('getTwig_Extension_CodeService.php'));
}, 'twig.extension.routing' => function () {
    return ($this->privates['twig.extension.routing'] ?? $this->load('getTwig_Extension_RoutingService.php'));
}, 'twig.extension.yaml' => function () {
    return ($this->privates['twig.extension.yaml'] ?? $this->privates['twig.extension.yaml'] = new \Symfony\Bridge\Twig\Extension\YamlExtension());
}, 'twig.extension.debug.stopwatch' => function () {
    return ($this->privates['twig.extension.debug.stopwatch'] ?? $this->load('getTwig_Extension_Debug_StopwatchService.php'));
}, 'twig.extension.expression' => function () {
    return ($this->privates['twig.extension.expression'] ?? $this->privates['twig.extension.expression'] = new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
}, 'twig.extension.httpkernel' => function () {
    return ($this->privates['twig.extension.httpkernel'] ?? $this->privates['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
}, 'twig.runtime.httpkernel' => function () {
    return ($this->privates['twig.runtime.httpkernel'] ?? $this->load('getTwig_Runtime_HttpkernelService.php'));
}, 'twig.extension.httpfoundation' => function () {
    return ($this->privates['twig.extension.httpfoundation'] ?? $this->load('getTwig_Extension_HttpfoundationService.php'));
}, 'twig.extension.debug' => function () {
    return ($this->privates['twig.extension.debug'] ?? $this->privates['twig.extension.debug'] = new \Twig\Extension\DebugExtension());
}, 'twig.translation.extractor' => function () {
    return ($this->privates['twig.translation.extractor'] ?? $this->load('getTwig_Translation_ExtractorService.php'));
}, 'twig.exception_listener' => function () {
    return ($this->privates['twig.exception_listener'] ?? $this->load('getTwig_ExceptionListenerService.php'));
}, 'twig.configurator.environment' => function () {
    return ($this->privates['twig.configurator.environment'] ?? $this->load('getTwig_Configurator_EnvironmentService.php'));
}, 'twig.runtime_loader' => function () {
    return ($this->privates['twig.runtime_loader'] ?? $this->load('getTwig_RuntimeLoaderService.php'));
}, 'twig.extension.form' => function () {
    return ($this->privates['twig.extension.form'] ?? $this->privates['twig.extension.form'] = new \Symfony\Bridge\Twig\Extension\FormExtension(array(0 => $this, 1 => 'twig.form.renderer')));
}, 'twig.form.engine' => function () {
    return ($this->privates['twig.form.engine'] ?? $this->load('getTwig_Form_EngineService.php'));
}, 'twig.form.renderer' => function () {
    return ($this->privates['twig.form.renderer'] ?? $this->load('getTwig_Form_RendererService.php'));
}, 'twig.loader.filesystem' => function () {
    return ($this->privates['twig.loader.filesystem'] ?? $this->load('getTwig_Loader_FilesystemService.php'));
}, 'templating.engine.twig' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'twig.command.debug' => function () {
    return ($this->privates['twig.command.debug'] ?? $this->load('getTwig_Command_DebugService.php'));
}, 'twig.command.lint' => function () {
    return ($this->privates['twig.command.lint'] ?? $this->load('getTwig_Command_LintService.php'));
}, 'monolog.processor.psr_log_message' => function () {
    return ($this->privates['monolog.processor.psr_log_message'] ?? $this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor());
}, 'monolog.handler.main' => function () {
    return ($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService());
}, 'monolog.handler.firephp' => function () {
    return ($this->privates['monolog.handler.firephp'] ?? $this->getMonolog_Handler_FirephpService());
}, 'web_server.command.server_run' => function () {
    return ($this->privates['web_server.command.server_run'] ?? $this->load('getWebServer_Command_ServerRunService.php'));
}, 'web_server.command.server_start' => function () {
    return ($this->privates['web_server.command.server_start'] ?? $this->load('getWebServer_Command_ServerStartService.php'));
}, 'web_server.command.server_stop' => function () {
    return ($this->privates['web_server.command.server_stop'] ?? $this->load('getWebServer_Command_ServerStopService.php'));
}, 'web_server.command.server_status' => function () {
    return ($this->privates['web_server.command.server_status'] ?? $this->load('getWebServer_Command_ServerStatusService.php'));
}, 'web_server.command.server_log' => function () {
    return ($this->privates['web_server.command.server_log'] ?? $this->load('getWebServer_Command_ServerLogService.php'));
}, 'doctrine_cache.contains_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.contains_command'] ?? $this->services['console.command.public_alias.doctrine_cache.contains_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand());
}, 'doctrine_cache.delete_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.delete_command'] ?? $this->services['console.command.public_alias.doctrine_cache.delete_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand());
}, 'doctrine_cache.flush_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.flush_command'] ?? $this->services['console.command.public_alias.doctrine_cache.flush_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand());
}, 'doctrine_cache.stats_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.stats_command'] ?? $this->services['console.command.public_alias.doctrine_cache.stats_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand());
}, 'doctrine.dbal.logger' => function () {
    return ($this->privates['doctrine.dbal.logger'] ?? $this->load('getDoctrine_Dbal_LoggerService.php'));
}, 'doctrine.dbal.connection_factory' => function () {
    return ($this->privates['doctrine.dbal.connection_factory'] ?? $this->privates['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array()));
}, 'doctrine.twig.doctrine_extension' => function () {
    return ($this->privates['doctrine.twig.doctrine_extension'] ?? $this->privates['doctrine.twig.doctrine_extension'] = new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
}, 'doctrine.database_create_command' => function () {
    return ($this->privates['doctrine.database_create_command'] ?? $this->load('getDoctrine_DatabaseCreateCommandService.php'));
}, 'doctrine.database_drop_command' => function () {
    return ($this->privates['doctrine.database_drop_command'] ?? $this->load('getDoctrine_DatabaseDropCommandService.php'));
}, 'doctrine.generate_entities_command' => function () {
    return ($this->privates['doctrine.generate_entities_command'] ?? $this->load('getDoctrine_GenerateEntitiesCommandService.php'));
}, 'doctrine.mapping_import_command' => function () {
    return ($this->privates['doctrine.mapping_import_command'] ?? $this->load('getDoctrine_MappingImportCommandService.php'));
}, 'doctrine.dbal.default_connection.configuration' => function () {
    return ($this->privates['doctrine.dbal.default_connection.configuration'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_ConfigurationService.php'));
}, 'doctrine.dbal.logger.profiling.default' => function () {
    return ($this->privates['doctrine.dbal.logger.profiling.default'] ?? $this->privates['doctrine.dbal.logger.profiling.default'] = new \Doctrine\DBAL\Logging\DebugStack());
}, 'doctrine.dbal.logger.chain.default' => function () {
    return ($this->privates['doctrine.dbal.logger.chain.default'] ?? $this->load('getDoctrine_Dbal_Logger_Chain_DefaultService.php'));
}, 'doctrine.dbal.default_connection.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'doctrine.orm.proxy_cache_warmer' => function () {
    return ($this->privates['doctrine.orm.proxy_cache_warmer'] ?? $this->load('getDoctrine_Orm_ProxyCacheWarmerService.php'));
}, 'form.type_guesser.doctrine' => function () {
    return ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 'form.type.entity' => function () {
    return ($this->privates['form.type.entity'] ?? $this->load('getForm_Type_EntityService.php'));
}, 'doctrine.orm.container_repository_factory' => function () {
    return ($this->privates['doctrine.orm.container_repository_factory'] ?? $this->load('getDoctrine_Orm_ContainerRepositoryFactoryService.php'));
}, 'doctrine.orm.validator.unique' => function () {
    return ($this->privates['doctrine.orm.validator.unique'] ?? $this->load('getDoctrine_Orm_Validator_UniqueService.php'));
}, 'doctrine.orm.validator_initializer' => function () {
    return ($this->privates['doctrine.orm.validator_initializer'] ?? $this->load('getDoctrine_Orm_ValidatorInitializerService.php'));
}, 'doctrine.orm.listeners.resolve_target_entity' => function () {
    return ($this->privates['doctrine.orm.listeners.resolve_target_entity'] ?? $this->load('getDoctrine_Orm_Listeners_ResolveTargetEntityService.php'));
}, 'doctrine.orm.naming_strategy.default' => function () {
    return ($this->privates['doctrine.orm.naming_strategy.default'] ?? $this->privates['doctrine.orm.naming_strategy.default'] = new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
}, 'doctrine.orm.quote_strategy.default' => function () {
    return ($this->privates['doctrine.orm.quote_strategy.default'] ?? $this->privates['doctrine.orm.quote_strategy.default'] = new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
}, 'doctrine.cache_clear_metadata_command' => function () {
    return ($this->privates['doctrine.cache_clear_metadata_command'] ?? $this->load('getDoctrine_CacheClearMetadataCommandService.php'));
}, 'doctrine.cache_clear_query_cache_command' => function () {
    return ($this->privates['doctrine.cache_clear_query_cache_command'] ?? $this->load('getDoctrine_CacheClearQueryCacheCommandService.php'));
}, 'doctrine.cache_clear_result_command' => function () {
    return ($this->privates['doctrine.cache_clear_result_command'] ?? $this->load('getDoctrine_CacheClearResultCommandService.php'));
}, 'doctrine.cache_collection_region_command' => function () {
    return ($this->privates['doctrine.cache_collection_region_command'] ?? $this->load('getDoctrine_CacheCollectionRegionCommandService.php'));
}, 'doctrine.mapping_convert_command' => function () {
    return ($this->privates['doctrine.mapping_convert_command'] ?? $this->load('getDoctrine_MappingConvertCommandService.php'));
}, 'doctrine.schema_create_command' => function () {
    return ($this->privates['doctrine.schema_create_command'] ?? $this->load('getDoctrine_SchemaCreateCommandService.php'));
}, 'doctrine.schema_drop_command' => function () {
    return ($this->privates['doctrine.schema_drop_command'] ?? $this->load('getDoctrine_SchemaDropCommandService.php'));
}, 'doctrine.ensure_production_settings_command' => function () {
    return ($this->privates['doctrine.ensure_production_settings_command'] ?? $this->load('getDoctrine_EnsureProductionSettingsCommandService.php'));
}, 'doctrine.clear_entity_region_command' => function () {
    return ($this->privates['doctrine.clear_entity_region_command'] ?? $this->load('getDoctrine_ClearEntityRegionCommandService.php'));
}, 'doctrine.database_import_command' => function () {
    return ($this->privates['doctrine.database_import_command'] ?? $this->load('getDoctrine_DatabaseImportCommandService.php'));
}, 'doctrine.mapping_info_command' => function () {
    return ($this->privates['doctrine.mapping_info_command'] ?? $this->load('getDoctrine_MappingInfoCommandService.php'));
}, 'doctrine.clear_query_region_command' => function () {
    return ($this->privates['doctrine.clear_query_region_command'] ?? $this->load('getDoctrine_ClearQueryRegionCommandService.php'));
}, 'doctrine.query_dql_command' => function () {
    return ($this->privates['doctrine.query_dql_command'] ?? $this->load('getDoctrine_QueryDqlCommandService.php'));
}, 'doctrine.query_sql_command' => function () {
    return ($this->privates['doctrine.query_sql_command'] ?? $this->load('getDoctrine_QuerySqlCommandService.php'));
}, 'doctrine.schema_update_command' => function () {
    return ($this->privates['doctrine.schema_update_command'] ?? $this->load('getDoctrine_SchemaUpdateCommandService.php'));
}, 'doctrine.schema_validate_command' => function () {
    return ($this->privates['doctrine.schema_validate_command'] ?? $this->load('getDoctrine_SchemaValidateCommandService.php'));
}, 'doctrine.orm.default_configuration' => function () {
    return ($this->privates['doctrine.orm.default_configuration'] ?? $this->load('getDoctrine_Orm_DefaultConfigurationService.php'));
}, 'doctrine.orm.default_metadata_driver' => function () {
    return ($this->privates['doctrine.orm.default_metadata_driver'] ?? $this->load('getDoctrine_Orm_DefaultMetadataDriverService.php'));
}, 'doctrine.orm.default_entity_listener_resolver' => function () {
    return ($this->privates['doctrine.orm.default_entity_listener_resolver'] ?? $this->privates['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver($this));
}, 'doctrine.orm.default_listeners.attach_entity_listeners' => function () {
    return ($this->privates['doctrine.orm.default_listeners.attach_entity_listeners'] ?? $this->privates['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener());
}, 'doctrine.orm.default_manager_configurator' => function () {
    return ($this->privates['doctrine.orm.default_manager_configurator'] ?? $this->privates['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array()));
}, 'doctrine_migrations.diff_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.diff_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.diff_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand());
}, 'doctrine_migrations.execute_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.execute_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.execute_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand());
}, 'doctrine_migrations.generate_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.generate_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.generate_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand());
}, 'doctrine_migrations.latest_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.latest_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.latest_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand());
}, 'doctrine_migrations.migrate_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.migrate_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.migrate_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand());
}, 'doctrine_migrations.status_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.status_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.status_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand());
}, 'doctrine_migrations.version_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.version_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.version_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand());
}, 'sm.twig_extension' => function () {
    return ($this->privates['sm.twig_extension'] ?? $this->load('getSm_TwigExtensionService.php'));
}, 'jms_serializer.event_dispatcher' => function () {
    return ($this->privates['jms_serializer.event_dispatcher'] ?? $this->load('getJmsSerializer_EventDispatcherService.php'));
}, 'jms_serializer.handler_registry' => function () {
    return ($this->services['fos_rest.serializer.jms_handler_registry'] ?? $this->load('getFosRest_Serializer_JmsHandlerRegistryService.php'));
}, 'jms_serializer.metadata.file_locator' => function () {
    return ($this->privates['jms_serializer.metadata.file_locator'] ?? $this->privates['jms_serializer.metadata.file_locator'] = new \Metadata\Driver\FileLocator(array()));
}, 'jms_serializer.metadata.yaml_driver' => function () {
    return ($this->privates['jms_serializer.metadata.yaml_driver'] ?? $this->load('getJmsSerializer_Metadata_YamlDriverService.php'));
}, 'jms_serializer.metadata.xml_driver' => function () {
    return ($this->privates['jms_serializer.metadata.xml_driver'] ?? $this->load('getJmsSerializer_Metadata_XmlDriverService.php'));
}, 'jms_serializer.metadata.php_driver' => function () {
    return ($this->privates['jms_serializer.metadata.php_driver'] ?? $this->load('getJmsSerializer_Metadata_PhpDriverService.php'));
}, 'jms_serializer.metadata.annotation_driver' => function () {
    return ($this->privates['jms_serializer.metadata.annotation_driver'] ?? $this->load('getJmsSerializer_Metadata_AnnotationDriverService.php'));
}, 'jms_serializer.metadata.chain_driver' => function () {
    return ($this->privates['jms_serializer.metadata.chain_driver'] ?? $this->load('getJmsSerializer_Metadata_ChainDriverService.php'));
}, 'jms_serializer.metadata.doctrine_type_driver' => function () {
    return ($this->services['jms_serializer.metadata_driver'] ?? $this->load('getJmsSerializer_MetadataDriverService.php'));
}, 'jms_serializer.metadata.lazy_loading_driver' => function () {
    return ($this->privates['jms_serializer.metadata.lazy_loading_driver'] ?? $this->privates['jms_serializer.metadata.lazy_loading_driver'] = new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'));
}, 'jms_serializer.metadata.cache.file_cache' => function () {
    return ($this->privates['jms_serializer.metadata.cache.file_cache'] ?? $this->privates['jms_serializer.metadata.cache.file_cache'] = new \Metadata\Cache\FileCache(($this->targetDirs[0].'/jms_serializer')));
}, 'jms_serializer.metadata_factory' => function () {
    return ($this->privates['jms_serializer.metadata_factory'] ?? $this->load('getJmsSerializer_MetadataFactoryService.php'));
}, 'jms_serializer.camel_case_naming_strategy' => function () {
    return ($this->privates['jms_serializer.camel_case_naming_strategy'] ?? $this->privates['jms_serializer.camel_case_naming_strategy'] = new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true));
}, 'jms_serializer.serialized_name_annotation_strategy' => function () {
    return ($this->privates['jms_serializer.serialized_name_annotation_strategy'] ?? $this->load('getJmsSerializer_SerializedNameAnnotationStrategyService.php'));
}, 'jms_serializer.cache_naming_strategy' => function () {
    return ($this->privates['jms_serializer.cache_naming_strategy'] ?? $this->load('getJmsSerializer_CacheNamingStrategyService.php'));
}, 'jms_serializer.doctrine_object_constructor' => function () {
    return ($this->services['jms_serializer.object_constructor'] ?? $this->load('getJmsSerializer_ObjectConstructorService.php'));
}, 'jms_serializer.unserialize_object_constructor' => function () {
    return ($this->privates['jms_serializer.unserialize_object_constructor'] ?? $this->privates['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor());
}, 'jms_serializer.serializer' => function () {
    return ($this->services['jms_serializer'] ?? $this->load('getJmsSerializerService.php'));
}, 'jms_serializer.expression_evaluator' => function () {
    return ($this->privates['jms_serializer.expression_evaluator'] ?? $this->load('getJmsSerializer_ExpressionEvaluatorService.php'));
}, 'jms_serializer.expression_language' => function () {
    return ($this->privates['jms_serializer.expression_language'] ?? $this->load('getJmsSerializer_ExpressionLanguageService.php'));
}, 'jms_serializer.expression_language.function_provider' => function () {
    return ($this->privates['jms_serializer.expression_language.function_provider'] ?? $this->privates['jms_serializer.expression_language.function_provider'] = new \JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider());
}, 'jms_serializer.twig_extension.serializer' => function () {
    return ($this->privates['jms_serializer.twig_extension.serializer'] ?? $this->privates['jms_serializer.twig_extension.serializer'] = new \JMS\Serializer\Twig\SerializerRuntimeExtension());
}, 'jms_serializer.accessor_strategy.default' => function () {
    return ($this->privates['jms_serializer.accessor_strategy.default'] ?? $this->privates['jms_serializer.accessor_strategy.default'] = new \JMS\Serializer\Accessor\DefaultAccessorStrategy());
}, 'jms_serializer.accessor_strategy.expression' => function () {
    return ($this->privates['jms_serializer.accessor_strategy.expression'] ?? $this->load('getJmsSerializer_AccessorStrategy_ExpressionService.php'));
}, 'jms_serializer.configured_serialization_context_factory' => function () {
    return ($this->services['jms_serializer.serialization_context_factory'] ?? $this->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory());
}, 'jms_serializer.configured_deserialization_context_factory' => function () {
    return ($this->services['jms_serializer.deserialization_context_factory'] ?? $this->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory());
}, 'hateoas.link_factory' => function () {
    return ($this->privates['hateoas.link_factory'] ?? $this->load('getHateoas_LinkFactoryService.php'));
}, 'hateoas.links_factory' => function () {
    return ($this->privates['hateoas.links_factory'] ?? $this->load('getHateoas_LinksFactoryService.php'));
}, 'hateoas.embeds_factory' => function () {
    return ($this->privates['hateoas.embeds_factory'] ?? $this->load('getHateoas_EmbedsFactoryService.php'));
}, 'hateoas.expression.evaluator' => function () {
    return ($this->privates['hateoas.expression.evaluator'] ?? $this->load('getHateoas_Expression_EvaluatorService.php'));
}, 'bazinga_hateoas.expression_language' => function () {
    return ($this->privates['bazinga_hateoas.expression_language'] ?? $this->privates['bazinga_hateoas.expression_language'] = new \Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage());
}, 'hateoas.serializer.xml' => function () {
    return ($this->privates['hateoas.serializer.xml'] ?? $this->load('getHateoas_Serializer_XmlService.php'));
}, 'hateoas.serializer.json_hal' => function () {
    return ($this->privates['hateoas.serializer.json_hal'] ?? $this->privates['hateoas.serializer.json_hal'] = new \Hateoas\Serializer\JsonHalSerializer());
}, 'hateoas.serializer.exclusion_manager' => function () {
    return ($this->privates['hateoas.serializer.exclusion_manager'] ?? $this->load('getHateoas_Serializer_ExclusionManagerService.php'));
}, 'hateoas.inline_deferrer.embeds' => function () {
    return ($this->privates['hateoas.inline_deferrer.embeds'] ?? $this->load('getHateoas_InlineDeferrer_EmbedsService.php'));
}, 'hateoas.inline_deferrer.links' => function () {
    return ($this->privates['hateoas.inline_deferrer.links'] ?? $this->load('getHateoas_InlineDeferrer_LinksService.php'));
}, 'hateoas.configuration.provider.resolver.chain' => function () {
    return ($this->privates['hateoas.configuration.provider.resolver.chain'] ?? $this->load('getHateoas_Configuration_Provider_Resolver_ChainService.php'));
}, 'hateoas.configuration.relation_provider' => function () {
    return ($this->privates['hateoas.configuration.relation_provider'] ?? $this->load('getHateoas_Configuration_RelationProviderService.php'));
}, 'hateoas.configuration.relations_repository' => function () {
    return ($this->privates['hateoas.configuration.relations_repository'] ?? $this->load('getHateoas_Configuration_RelationsRepositoryService.php'));
}, 'hateoas.configuration.metadata.yaml_driver' => function () {
    return ($this->privates['hateoas.configuration.metadata.yaml_driver'] ?? $this->load('getHateoas_Configuration_Metadata_YamlDriverService.php'));
}, 'hateoas.configuration.metadata.xml_driver' => function () {
    return ($this->privates['hateoas.configuration.metadata.xml_driver'] ?? $this->load('getHateoas_Configuration_Metadata_XmlDriverService.php'));
}, 'hateoas.configuration.metadata.annotation_driver' => function () {
    return ($this->privates['hateoas.configuration.metadata.annotation_driver'] ?? $this->load('getHateoas_Configuration_Metadata_AnnotationDriverService.php'));
}, 'hateoas.configuration.metadata.extension_driver' => function () {
    return ($this->privates['hateoas.configuration.metadata.extension_driver'] ?? $this->load('getHateoas_Configuration_Metadata_ExtensionDriverService.php'));
}, 'hateoas.configuration.metadata.chain_driver' => function () {
    return ($this->privates['hateoas.configuration.metadata.chain_driver'] ?? $this->load('getHateoas_Configuration_Metadata_ChainDriverService.php'));
}, 'hateoas.configuration.metadata.cache.file_cache' => function () {
    return ($this->privates['hateoas.configuration.metadata.cache.file_cache'] ?? $this->privates['hateoas.configuration.metadata.cache.file_cache'] = new \Metadata\Cache\FileCache(($this->targetDirs[0].'/hateoas')));
}, 'hateoas.configuration.metadata_factory' => function () {
    return ($this->privates['hateoas.configuration.metadata_factory'] ?? $this->load('getHateoas_Configuration_MetadataFactoryService.php'));
}, 'hateoas.generator.symfony' => function () {
    return ($this->privates['hateoas.generator.symfony'] ?? $this->load('getHateoas_Generator_SymfonyService.php'));
}, 'hateoas.twig.link' => function () {
    return ($this->privates['hateoas.twig.link'] ?? $this->load('getHateoas_Twig_LinkService.php'));
}, 'fos_rest.view_handler.default' => function () {
    return ($this->services['fos_rest.view_handler'] ?? $this->load('getFosRest_ViewHandlerService.php'));
}, 'fos_rest.routing.loader.directory' => function () {
    return ($this->privates['fos_rest.routing.loader.directory'] ?? $this->load('getFosRest_Routing_Loader_DirectoryService.php'));
}, 'fos_rest.routing.loader.controller' => function () {
    return ($this->privates['fos_rest.routing.loader.controller'] ?? $this->load('getFosRest_Routing_Loader_ControllerService.php'));
}, 'fos_rest.routing.loader.processor' => function () {
    return ($this->privates['fos_rest.routing.loader.processor'] ?? $this->privates['fos_rest.routing.loader.processor'] = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor());
}, 'fos_rest.routing.loader.yaml_collection' => function () {
    return ($this->privates['fos_rest.routing.loader.yaml_collection'] ?? $this->load('getFosRest_Routing_Loader_YamlCollectionService.php'));
}, 'fos_rest.routing.loader.xml_collection' => function () {
    return ($this->privates['fos_rest.routing.loader.xml_collection'] ?? $this->load('getFosRest_Routing_Loader_XmlCollectionService.php'));
}, 'fos_rest.routing.loader.reader.controller' => function () {
    return ($this->privates['fos_rest.routing.loader.reader.controller'] ?? $this->load('getFosRest_Routing_Loader_Reader_ControllerService.php'));
}, 'fos_rest.routing.loader.reader.action' => function () {
    return ($this->privates['fos_rest.routing.loader.reader.action'] ?? $this->load('getFosRest_Routing_Loader_Reader_ActionService.php'));
}, 'fos_rest.inflector.doctrine' => function () {
    return ($this->privates['fos_rest.inflector.doctrine'] ?? $this->privates['fos_rest.inflector.doctrine'] = new \FOS\RestBundle\Inflector\DoctrineInflector());
}, 'fos_rest.request.param_fetcher.reader' => function () {
    return ($this->privates['fos_rest.request.param_fetcher.reader'] ?? $this->load('getFosRest_Request_ParamFetcher_ReaderService.php'));
}, 'fos_rest.serializer.jms' => function () {
    return ($this->privates['fos_rest.serializer.jms'] ?? $this->load('getFosRest_Serializer_JmsService.php'));
}, 'fos_rest.exception_listener' => function () {
    return ($this->privates['fos_rest.exception_listener'] ?? $this->load('getFosRest_ExceptionListenerService.php'));
}, 'fos_rest.exception.codes_map' => function () {
    return ($this->privates['fos_rest.exception.codes_map'] ?? $this->privates['fos_rest.exception.codes_map'] = new \FOS\RestBundle\Util\ExceptionValueMap(array()));
}, 'fos_rest.exception.messages_map' => function () {
    return ($this->privates['fos_rest.exception.messages_map'] ?? $this->privates['fos_rest.exception.messages_map'] = new \FOS\RestBundle\Util\ExceptionValueMap(array()));
}, 'fos_rest.serializer.exception_normalizer.jms' => function () {
    return ($this->privates['fos_rest.serializer.exception_normalizer.jms'] ?? $this->load('getFosRest_Serializer_ExceptionNormalizer_JmsService.php'));
}, 'fos_rest.decoder.json' => function () {
    return ($this->privates['fos_rest.decoder.json'] ?? $this->privates['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder());
}, 'fos_rest.decoder.xml' => function () {
    return ($this->privates['fos_rest.decoder.xml'] ?? $this->privates['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder());
}, 'fos_rest.decoder_provider' => function () {
    return ($this->privates['fos_rest.decoder_provider'] ?? $this->getFosRest_DecoderProviderService());
}, 'fos_rest.body_listener' => function () {
    return ($this->privates['fos_rest.body_listener'] ?? $this->getFosRest_BodyListenerService());
}, 'fos_rest.format_listener' => function () {
    return ($this->privates['fos_rest.format_listener'] ?? $this->getFosRest_FormatListenerService());
}, 'fos_rest.format_negotiator' => function () {
    return ($this->privates['fos_rest.format_negotiator'] ?? $this->getFosRest_FormatNegotiatorService());
}, 'sylius.resource_controller.parameters_parser' => function () {
    return ($this->privates['sylius.resource_controller.parameters_parser'] ?? $this->load('getSylius_ResourceController_ParametersParserService.php'));
}, 'sylius.resource_controller.request_configuration_factory' => function () {
    return ($this->privates['sylius.resource_controller.request_configuration_factory'] ?? $this->load('getSylius_ResourceController_RequestConfigurationFactoryService.php'));
}, 'sylius.resource_controller.new_resource_factory' => function () {
    return ($this->privates['sylius.resource_controller.new_resource_factory'] ?? $this->privates['sylius.resource_controller.new_resource_factory'] = new \Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory());
}, 'sylius.resource_controller.single_resource_provider' => function () {
    return ($this->privates['sylius.resource_controller.single_resource_provider'] ?? $this->privates['sylius.resource_controller.single_resource_provider'] = new \Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider());
}, 'sylius.resource_controller.pagerfanta_representation_factory' => function () {
    return ($this->privates['sylius.resource_controller.pagerfanta_representation_factory'] ?? $this->privates['sylius.resource_controller.pagerfanta_representation_factory'] = new \Hateoas\Representation\Factory\PagerfantaFactory());
}, 'sylius.resource_controller.resources_collection_provider' => function () {
    return ($this->privates['sylius.resource_controller.resources_collection_provider'] ?? $this->load('getSylius_ResourceController_ResourcesCollectionProviderService.php'));
}, 'sylius.resource_controller.form_factory' => function () {
    return ($this->privates['sylius.resource_controller.form_factory'] ?? $this->load('getSylius_ResourceController_FormFactoryService.php'));
}, 'sylius.resource_controller.redirect_handler' => function () {
    return ($this->privates['sylius.resource_controller.redirect_handler'] ?? $this->load('getSylius_ResourceController_RedirectHandlerService.php'));
}, 'sylius.resource_controller.authorization_checker.disabled' => function () {
    return ($this->privates['sylius.resource_controller.authorization_checker.disabled'] ?? $this->privates['sylius.resource_controller.authorization_checker.disabled'] = new \Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker());
}, 'sylius.resource_controller.flash_helper' => function () {
    return ($this->privates['sylius.resource_controller.flash_helper'] ?? $this->load('getSylius_ResourceController_FlashHelperService.php'));
}, 'sylius.resource_controller.event_dispatcher' => function () {
    return ($this->privates['sylius.resource_controller.event_dispatcher'] ?? $this->load('getSylius_ResourceController_EventDispatcherService.php'));
}, 'sylius.resource_controller.view_handler' => function () {
    return ($this->privates['sylius.resource_controller.view_handler'] ?? $this->load('getSylius_ResourceController_ViewHandlerService.php'));
}, 'sylius.resource_controller.state_machine' => function () {
    return ($this->privates['sylius.resource_controller.state_machine'] ?? $this->load('getSylius_ResourceController_StateMachineService.php'));
}, 'sylius.resource_controller.resource_update_handler' => function () {
    return ($this->privates['sylius.resource_controller.resource_update_handler'] ?? $this->load('getSylius_ResourceController_ResourceUpdateHandlerService.php'));
}, 'sylius.resource_controller.resource_delete_handler' => function () {
    return ($this->privates['sylius.resource_controller.resource_delete_handler'] ?? $this->privates['sylius.resource_controller.resource_delete_handler'] = new \Sylius\Bundle\ResourceBundle\Controller\ResourceDeleteHandler());
}, 'sylius.routing.loader.resource' => function () {
    return ($this->privates['sylius.routing.loader.resource'] ?? $this->load('getSylius_Routing_Loader_ResourceService.php'));
}, 'sylius.form.type_extension.form.request_handler' => function () {
    return ($this->privates['sylius.form.type_extension.form.request_handler'] ?? $this->privates['sylius.form.type_extension.form.request_handler'] = new \Sylius\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler());
}, 'sylius.resource_registry' => function () {
    return ($this->privates['sylius.resource_registry'] ?? $this->load('getSylius_ResourceRegistryService.php'));
}, 'sylius.expression_language' => function () {
    return ($this->privates['sylius.expression_language'] ?? $this->privates['sylius.expression_language'] = new \Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage());
}, 'sylius.registry.resource_repository' => function () {
    return ($this->privates['sylius.registry.resource_repository'] ?? $this->load('getSylius_Registry_ResourceRepositoryService.php'));
}, 'sylius.registry.form_builder' => function () {
    return ($this->privates['sylius.registry.form_builder'] ?? $this->load('getSylius_Registry_FormBuilderService.php'));
}, 'sylius.grid_options_parser' => function () {
    return ($this->privates['sylius.grid_options_parser'] ?? $this->load('getSylius_GridOptionsParserService.php'));
}, 'sylius.form_builder.default' => function () {
    return ($this->privates['sylius.form_builder.default'] ?? $this->load('getSylius_FormBuilder_DefaultService.php'));
}, 'sylius.form_registry.grid_filter' => function () {
    return ($this->privates['sylius.form_registry.grid_filter'] ?? $this->load('getSylius_FormRegistry_GridFilterService.php'));
}, 'sylius.twig.extension.grid' => function () {
    return ($this->privates['sylius.twig.extension.grid'] ?? $this->load('getSylius_Twig_Extension_GridService.php'));
}, 'sylius.twig.extension.bulk_action_grid' => function () {
    return ($this->privates['sylius.twig.extension.bulk_action_grid'] ?? $this->load('getSylius_Twig_Extension_BulkActionGridService.php'));
}, 'white_october_pagerfanta.view_factory' => function () {
    return ($this->privates['white_october_pagerfanta.view_factory'] ?? $this->load('getWhiteOctoberPagerfanta_ViewFactoryService.php'));
}, 'pagerfanta.view.default' => function () {
    return ($this->privates['pagerfanta.view.default'] ?? $this->privates['pagerfanta.view.default'] = new \Pagerfanta\View\DefaultView());
}, 'pagerfanta.view.default_translated' => function () {
    return ($this->privates['pagerfanta.view.default_translated'] ?? $this->load('getPagerfanta_View_DefaultTranslatedService.php'));
}, 'pagerfanta.view.twitter_bootstrap' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap'] ?? $this->privates['pagerfanta.view.twitter_bootstrap'] = new \Pagerfanta\View\TwitterBootstrapView());
}, 'pagerfanta.view.twitter_bootstrap3' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap3'] ?? $this->privates['pagerfanta.view.twitter_bootstrap3'] = new \Pagerfanta\View\TwitterBootstrap3View());
}, 'pagerfanta.view.twitter_bootstrap4' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap4'] ?? $this->privates['pagerfanta.view.twitter_bootstrap4'] = new \Pagerfanta\View\TwitterBootstrap4View());
}, 'pagerfanta.view.semantic_ui' => function () {
    return ($this->privates['pagerfanta.view.semantic_ui'] ?? $this->privates['pagerfanta.view.semantic_ui'] = new \Pagerfanta\View\SemanticUiView());
}, 'pagerfanta.view.twitter_bootstrap4_translated' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap4_translated'] ?? $this->load('getPagerfanta_View_TwitterBootstrap4TranslatedService.php'));
}, 'pagerfanta.view.twitter_bootstrap3_translated' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap3_translated'] ?? $this->load('getPagerfanta_View_TwitterBootstrap3TranslatedService.php'));
}, 'pagerfanta.view.twitter_bootstrap_translated' => function () {
    return ($this->privates['pagerfanta.view.twitter_bootstrap_translated'] ?? $this->load('getPagerfanta_View_TwitterBootstrapTranslatedService.php'));
}, 'pagerfanta.view.semantic_ui_translated' => function () {
    return ($this->privates['pagerfanta.view.semantic_ui_translated'] ?? $this->load('getPagerfanta_View_SemanticUiTranslatedService.php'));
}, 'twig.extension.pagerfanta' => function () {
    return ($this->privates['twig.extension.pagerfanta'] ?? $this->load('getTwig_Extension_PagerfantaService.php'));
}, 'pagerfanta.convert_not_valid_max_per_page_to_not_found_listener' => function () {
    return ($this->privates['pagerfanta.convert_not_valid_max_per_page_to_not_found_listener'] ?? $this->privates['pagerfanta.convert_not_valid_max_per_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener());
}, 'pagerfanta.convert_not_valid_current_page_to_not_found_listener' => function () {
    return ($this->privates['pagerfanta.convert_not_valid_current_page_to_not_found_listener'] ?? $this->privates['pagerfanta.convert_not_valid_current_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener());
}, 'debug.argument_resolver.request_attribute' => function () {
    return ($this->privates['debug.argument_resolver.request_attribute'] ?? $this->load('getDebug_ArgumentResolver_RequestAttributeService.php'));
}, 'debug.argument_resolver.request' => function () {
    return ($this->privates['debug.argument_resolver.request'] ?? $this->load('getDebug_ArgumentResolver_RequestService.php'));
}, 'debug.argument_resolver.session' => function () {
    return ($this->privates['debug.argument_resolver.session'] ?? $this->load('getDebug_ArgumentResolver_SessionService.php'));
}, 'debug.argument_resolver.service' => function () {
    return ($this->privates['debug.argument_resolver.service'] ?? $this->load('getDebug_ArgumentResolver_ServiceService.php'));
}, 'debug.argument_resolver.default' => function () {
    return ($this->privates['debug.argument_resolver.default'] ?? $this->load('getDebug_ArgumentResolver_DefaultService.php'));
}, 'debug.argument_resolver.variadic' => function () {
    return ($this->privates['debug.argument_resolver.variadic'] ?? $this->load('getDebug_ArgumentResolver_VariadicService.php'));
}, 'monolog.logger.request' => function () {
    return ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService());
}, 'monolog.logger.console' => function () {
    return ($this->privates['monolog.logger.console'] ?? $this->load('getMonolog_Logger_ConsoleService.php'));
}, 'monolog.logger.cache' => function () {
    return ($this->privates['monolog.logger.cache'] ?? $this->load('getMonolog_Logger_CacheService.php'));
}, 'monolog.logger.php' => function () {
    return ($this->privates['monolog.logger.php'] ?? $this->getMonolog_Logger_PhpService());
}, 'monolog.logger.event' => function () {
    return ($this->privates['monolog.logger.event'] ?? $this->getMonolog_Logger_EventService());
}, 'monolog.logger.router' => function () {
    return ($this->privates['monolog.logger.router'] ?? $this->getMonolog_Logger_RouterService());
}, 'monolog.logger.doctrine' => function () {
    return ($this->privates['monolog.logger.doctrine'] ?? $this->load('getMonolog_Logger_DoctrineService.php'));
}, 'fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386' => function () {
    return ($this->privates['fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386'] ?? $this->getFosRest_RequestMatcher_2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386Service());
}, 'fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478' => function () {
    return ($this->privates['fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478'] ?? $this->getFosRest_RequestMatcher_69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478Service());
}, 'fos_rest.serializer.form_error_handler' => function () {
    return ($this->services['jms_serializer.form_error_handler'] ?? $this->load('getJmsSerializer_FormErrorHandlerService.php'));
}, 'sylius.resource_controller.resources_resolver.grid_aware.inner' => function () {
    return ($this->privates['sylius.resource_controller.resources_resolver.grid_aware.inner'] ?? $this->privates['sylius.resource_controller.resources_resolver.grid_aware.inner'] = new \Sylius\Bundle\ResourceBundle\Controller\ResourcesResolver());
}, 'sylius.custom_grid_renderer.twig.inner' => function () {
    return ($this->privates['sylius.custom_grid_renderer.twig.inner'] ?? $this->load('getSylius_CustomGridRenderer_Twig_InnerService.php'));
}, 'debug.event_dispatcher.inner' => function () {
    return ($this->privates['debug.event_dispatcher.inner'] ?? $this->privates['debug.event_dispatcher.inner'] = new \Symfony\Component\EventDispatcher\EventDispatcher());
}, 'debug.controller_resolver.inner' => function () {
    return ($this->privates['debug.controller_resolver.inner'] ?? $this->getDebug_ControllerResolver_InnerService());
}, 'debug.argument_resolver.inner' => function () {
    return ($this->privates['debug.argument_resolver.inner'] ?? $this->getDebug_ArgumentResolver_InnerService());
}, 'debug.argument_resolver.request_attribute.inner' => function () {
    return ($this->privates['debug.argument_resolver.request_attribute.inner'] ?? $this->privates['debug.argument_resolver.request_attribute.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver());
}, 'debug.argument_resolver.request.inner' => function () {
    return ($this->privates['debug.argument_resolver.request.inner'] ?? $this->privates['debug.argument_resolver.request.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver());
}, 'debug.argument_resolver.session.inner' => function () {
    return ($this->privates['debug.argument_resolver.session.inner'] ?? $this->privates['debug.argument_resolver.session.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver());
}, 'debug.argument_resolver.service.inner' => function () {
    return ($this->privates['debug.argument_resolver.service.inner'] ?? $this->load('getDebug_ArgumentResolver_Service_InnerService.php'));
}, 'debug.argument_resolver.default.inner' => function () {
    return ($this->privates['debug.argument_resolver.default.inner'] ?? $this->privates['debug.argument_resolver.default.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver());
}, 'debug.argument_resolver.variadic.inner' => function () {
    return ($this->privates['debug.argument_resolver.variadic.inner'] ?? $this->privates['debug.argument_resolver.variadic.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver());
}, 'fos_rest.serializer.form_error_handler.inner' => function () {
    return ($this->privates['fos_rest.serializer.form_error_handler.inner'] ?? $this->load('getFosRest_Serializer_FormErrorHandler_InnerService.php'));
}, 'Psr\\Container\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => function () {
    return ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
}, 'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => function () {
    return ($this->services['http_kernel'] ?? $this->getHttpKernelService());
}, 'Symfony\\Component\\HttpFoundation\\RequestStack' => function () {
    return ($this->services['request_stack'] ?? $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack());
}, 'Symfony\\Component\\HttpKernel\\KernelInterface' => function () {
    return ($this->services['kernel'] ?? $this->get('kernel', 1));
}, 'Symfony\\Component\\Filesystem\\Filesystem' => function () {
    return ($this->services['filesystem'] ?? $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem());
}, 'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[2].'/Resources'), array(0 => $this->targetDirs[2])));
}, 'Psr\\Cache\\CacheItemPoolInterface' => function () {
    return ($this->services['cache.app'] ?? $this->load('getCache_AppService.php'));
}, 'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => function () {
    return ($this->services['cache.app'] ?? $this->load('getCache_AppService.php'));
}, 'Symfony\\Component\\Translation\\TranslatorInterface' => function () {
    return ($this->services['translator'] ?? $this->getTranslatorService());
}, 'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => function () {
    return ($this->services['session'] ?? $this->load('getSessionService.php'));
}, 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBagInterface' => function () {
    return ($this->privates['session.flash_bag'] ?? $this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
}, 'session.storage.filesystem' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'session.storage' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => function () {
    return ($this->privates['security.csrf.token_generator'] ?? $this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator());
}, 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => function () {
    return ($this->privates['security.csrf.token_storage'] ?? $this->load('getSecurity_Csrf_TokenStorageService.php'));
}, 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => function () {
    return ($this->services['security.csrf.token_manager'] ?? $this->load('getSecurity_Csrf_TokenManagerService.php'));
}, 'Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface' => function () {
    return ($this->privates['form.resolved_type_factory'] ?? $this->privates['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory());
}, 'Symfony\\Component\\Form\\FormRegistryInterface' => function () {
    return ($this->privates['form.registry'] ?? $this->load('getForm_RegistryService.php'));
}, 'Symfony\\Component\\Form\\FormFactoryInterface' => function () {
    return ($this->services['form.factory'] ?? $this->load('getForm_FactoryService.php'));
}, 'form.property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->load('getPropertyAccessorService.php'));
}, 'form.choice_list_factory' => function () {
    return ($this->privates['form.choice_list_factory.cached'] ?? $this->load('getForm_ChoiceListFactory_CachedService.php'));
}, 'Symfony\\Component\\Asset\\Packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->load('getAssets_PackagesService.php'));
}, 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => function () {
    return ($this->services['validator'] ?? $this->load('getValidatorService.php'));
}, 'validator.mapping.class_metadata_factory' => function () {
    return ($this->services['validator'] ?? $this->load('getValidatorService.php'));
}, 'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => function () {
    return ($this->privates['translation.reader'] ?? $this->load('getTranslation_ReaderService.php'));
}, 'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => function () {
    return ($this->privates['translation.extractor'] ?? $this->load('getTranslation_ExtractorService.php'));
}, 'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => function () {
    return ($this->privates['translation.writer'] ?? $this->load('getTranslation_WriterService.php'));
}, 'translator.formatter' => function () {
    return ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService());
}, 'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'Symfony\\Component\\Stopwatch\\Stopwatch' => function () {
    return ($this->privates['debug.stopwatch'] ?? $this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true));
}, 'Symfony\\Component\\Routing\\RouterInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContextAwareInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContext' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'annotation_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'Doctrine\\Common\\Annotations\\Reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => function () {
    return ($this->privates['property_accessor'] ?? $this->load('getPropertyAccessorService.php'));
}, 'Twig_Environment' => function () {
    return ($this->services['twig'] ?? $this->load('getTwigService.php'));
}, 'Twig\\Environment' => function () {
    return ($this->services['twig'] ?? $this->load('getTwigService.php'));
}, 'Doctrine\\DBAL\\Driver\\Connection' => function () {
    return ($this->services['doctrine.dbal.default_connection'] ?? $this->load('getDoctrine_Dbal_DefaultConnectionService.php'));
}, 'Doctrine\\DBAL\\Connection' => function () {
    return ($this->services['doctrine.dbal.default_connection'] ?? $this->load('getDoctrine_Dbal_DefaultConnectionService.php'));
}, 'Doctrine\\Common\\Persistence\\ManagerRegistry' => function () {
    return ($this->services['doctrine'] ?? $this->load('getDoctrineService.php'));
}, 'Symfony\\Bridge\\Doctrine\\RegistryInterface' => function () {
    return ($this->services['doctrine'] ?? $this->load('getDoctrineService.php'));
}, 'doctrine.dbal.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'Doctrine\\Common\\Persistence\\ObjectManager' => function () {
    return ($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php'));
}, 'Doctrine\\ORM\\EntityManagerInterface' => function () {
    return ($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php'));
}, 'doctrine.orm.metadata.annotation_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->load('getAnnotations_CachedReaderService.php'));
}, 'doctrine.orm.default_entity_manager.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'jms_serializer.metadata.cache' => function () {
    return ($this->privates['jms_serializer.metadata.cache.file_cache'] ?? $this->privates['jms_serializer.metadata.cache.file_cache'] = new \Metadata\Cache\FileCache(($this->targetDirs[0].'/jms_serializer')));
}, 'jms_serializer.naming_strategy' => function () {
    return ($this->privates['jms_serializer.cache_naming_strategy'] ?? $this->load('getJmsSerializer_CacheNamingStrategyService.php'));
}, 'JMS\\Serializer\\SerializerInterface' => function () {
    return ($this->services['jms_serializer'] ?? $this->load('getJmsSerializerService.php'));
}, 'JMS\\Serializer\\ArrayTransformerInterface' => function () {
    return ($this->services['jms_serializer'] ?? $this->load('getJmsSerializerService.php'));
}, 'jms_serializer.accessor_strategy' => function () {
    return ($this->privates['jms_serializer.accessor_strategy.expression'] ?? $this->load('getJmsSerializer_AccessorStrategy_ExpressionService.php'));
}, 'hateoas.configuration.provider.resolver' => function () {
    return ($this->privates['hateoas.configuration.provider.resolver.chain'] ?? $this->load('getHateoas_Configuration_Provider_Resolver_ChainService.php'));
}, 'hateoas.configuration.metadata.cache' => function () {
    return ($this->privates['hateoas.configuration.metadata.cache.file_cache'] ?? $this->privates['hateoas.configuration.metadata.cache.file_cache'] = new \Metadata\Cache\FileCache(($this->targetDirs[0].'/hateoas')));
}, 'FOS\\RestBundle\\View\\ViewHandlerInterface' => function () {
    return ($this->services['fos_rest.view_handler'] ?? $this->load('getFosRest_ViewHandlerService.php'));
}, 'fos_rest.router' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'fos_rest.templating' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'fos_rest.inflector' => function () {
    return ($this->privates['fos_rest.inflector.doctrine'] ?? $this->privates['fos_rest.inflector.doctrine'] = new \FOS\RestBundle\Inflector\DoctrineInflector());
}, 'sylius.resource_controller.authorization_checker' => function () {
    return ($this->privates['sylius.resource_controller.authorization_checker.disabled'] ?? $this->privates['sylius.resource_controller.authorization_checker.disabled'] = new \Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker());
}, 'sylius.grid.renderer' => function () {
    return ($this->services['sylius.custom_grid_renderer.twig'] ?? $this->load('getSylius_CustomGridRenderer_TwigService.php'));
}, 'sylius.grid.bulk_action_renderer' => function () {
    return ($this->services['sylius.custom_bulk_action_grid_renderer.twig'] ?? $this->load('getSylius_CustomBulkActionGridRenderer_TwigService.php'));
}, 'sylius.grid.data_extractor' => function () {
    return ($this->services['sylius.grid.data_extractor.property_access'] ?? $this->load('getSylius_Grid_DataExtractor_PropertyAccessService.php'));
}, 'argument_resolver.controller_locator' => function () {
    return ($this->privates['.service_locator.9_yeNH1'] ?? $this->privates['.service_locator.9_yeNH1'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array()));
}, 'Symfony\\Component\\Templating\\EngineInterface' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'Symfony\\Bundle\\FrameworkBundle\\Templating\\EngineInterface' => function () {
    return ($this->services['templating'] ?? $this->load('getTemplatingService.php'));
}, 'twig.loader' => function () {
    return ($this->privates['twig.loader.filesystem'] ?? $this->load('getTwig_Loader_FilesystemService.php'));
}, 'fos_rest.serializer' => function () {
    return ($this->privates['fos_rest.serializer.jms'] ?? $this->load('getFosRest_Serializer_JmsService.php'));
}, 'form.type_extension.form.request_handler' => function () {
    return ($this->privates['sylius.form.type_extension.form.request_handler'] ?? $this->privates['sylius.form.type_extension.form.request_handler'] = new \Sylius\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler());
}, 'sylius.resource_controller.resources_resolver' => function () {
    return ($this->services['sylius.resource_controller.resources_resolver.grid_aware'] ?? $this->load('getSylius_ResourceController_ResourcesResolver_GridAwareService.php'));
}, 'controller_resolver' => function () {
    return ($this->privates['debug.controller_resolver'] ?? $this->getDebug_ControllerResolverService());
}, 'argument_resolver' => function () {
    return ($this->privates['debug.argument_resolver'] ?? $this->getDebug_ArgumentResolverService());
}, 'argument_resolver.request_attribute' => function () {
    return ($this->privates['debug.argument_resolver.request_attribute'] ?? $this->load('getDebug_ArgumentResolver_RequestAttributeService.php'));
}, 'argument_resolver.request' => function () {
    return ($this->privates['debug.argument_resolver.request'] ?? $this->load('getDebug_ArgumentResolver_RequestService.php'));
}, 'argument_resolver.session' => function () {
    return ($this->privates['debug.argument_resolver.session'] ?? $this->load('getDebug_ArgumentResolver_SessionService.php'));
}, 'argument_resolver.service' => function () {
    return ($this->privates['debug.argument_resolver.service'] ?? $this->load('getDebug_ArgumentResolver_ServiceService.php'));
}, 'argument_resolver.default' => function () {
    return ($this->privates['debug.argument_resolver.default'] ?? $this->load('getDebug_ArgumentResolver_DefaultService.php'));
}, 'argument_resolver.variadic' => function () {
    return ($this->privates['debug.argument_resolver.variadic'] ?? $this->load('getDebug_ArgumentResolver_VariadicService.php'));
}));
