<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/OdiseoBlogBundle/tests/Application/app</parameter>
    <parameter key="kernel.project_dir">/var/www/OdiseoBlogBundle/tests/Application</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test</parameter>
    <parameter key="kernel.logs_dir">/var/www/OdiseoBlogBundle/tests/Application/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="OdiseoBlogBundle">Odiseo\BlogBundle\OdiseoBlogBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="winzouStateMachineBundle">winzou\Bundle\StateMachineBundle\winzouStateMachineBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="BazingaHateoasBundle">Bazinga\Bundle\HateoasBundle\BazingaHateoasBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="SyliusResourceBundle">Sylius\Bundle\ResourceBundle\SyliusResourceBundle</parameter>
      <parameter key="SyliusGridBundle">Sylius\Bundle\GridBundle\SyliusGridBundle</parameter>
      <parameter key="WhiteOctoberPagerfantaBundle">WhiteOctober\PagerfantaBundle\WhiteOctoberPagerfantaBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="OdiseoBlogBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/src</parameter>
        <parameter key="namespace">Odiseo\BlogBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/WebServerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="winzouStateMachineBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/winzou/state-machine-bundle</parameter>
        <parameter key="namespace">winzou\Bundle\StateMachineBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="BazingaHateoasBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/willdurand/hateoas-bundle</parameter>
        <parameter key="namespace">Bazinga\Bundle\HateoasBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/stof/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="SyliusResourceBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle</parameter>
        <parameter key="namespace">Sylius\Bundle\ResourceBundle</parameter>
      </parameter>
      <parameter key="SyliusGridBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/sylius/grid-bundle</parameter>
        <parameter key="namespace">Sylius\Bundle\GridBundle</parameter>
      </parameter>
      <parameter key="WhiteOctoberPagerfantaBundle" type="collection">
        <parameter key="path">/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle</parameter>
        <parameter key="namespace">WhiteOctober\PagerfantaBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appTestDebugProjectContainer</parameter>
    <parameter key="locale">en_US</parameter>
    <parameter key="secret">Heron is the best animal in the world!</parameter>
    <parameter key="odiseo_blog.driver.doctrine/orm">true</parameter>
    <parameter key="odiseo_blog.driver">doctrine/orm</parameter>
    <parameter key="sylius.resources" type="collection">
      <parameter key="odiseo_blog.article" type="collection">
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">Odiseo\BlogBundle\Model\Article</parameter>
          <parameter key="interface">Odiseo\BlogBundle\Model\ArticleInterface</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="repository">Odiseo\BlogBundle\Doctrine\ORM\ArticleRepository</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\TranslatableFactory</parameter>
          <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleType</parameter>
        </parameter>
        <parameter key="translation" type="collection">
          <parameter key="classes" type="collection">
            <parameter key="model">Odiseo\BlogBundle\Model\ArticleTranslation</parameter>
            <parameter key="interface">Odiseo\BlogBundle\Model\ArticleTranslationInterface</parameter>
            <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
            <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
            <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleTranslationType</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="odiseo_blog.article_translation" type="collection">
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">Odiseo\BlogBundle\Model\ArticleTranslation</parameter>
          <parameter key="interface">Odiseo\BlogBundle\Model\ArticleTranslationInterface</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleTranslationType</parameter>
        </parameter>
      </parameter>
      <parameter key="odiseo_blog.article_category" type="collection">
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">Odiseo\BlogBundle\Model\ArticleCategory</parameter>
          <parameter key="interface">Odiseo\BlogBundle\Model\ArticleCategoryInterface</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="repository">Odiseo\BlogBundle\Doctrine\ORM\ArticleCategoryRepository</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\TranslatableFactory</parameter>
          <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryType</parameter>
        </parameter>
        <parameter key="translation" type="collection">
          <parameter key="classes" type="collection">
            <parameter key="model">Odiseo\BlogBundle\Model\ArticleCategoryTranslation</parameter>
            <parameter key="interface">Odiseo\BlogBundle\Model\ArticleCategoryTranslationInterface</parameter>
            <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
            <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
            <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="odiseo_blog.article_category_translation" type="collection">
        <parameter key="driver">doctrine/orm</parameter>
        <parameter key="classes" type="collection">
          <parameter key="model">Odiseo\BlogBundle\Model\ArticleCategoryTranslation</parameter>
          <parameter key="interface">Odiseo\BlogBundle\Model\ArticleCategoryTranslationInterface</parameter>
          <parameter key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
          <parameter key="factory">Sylius\Component\Resource\Factory\Factory</parameter>
          <parameter key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="odiseo_blog.model.article.class">Odiseo\BlogBundle\Model\Article</parameter>
    <parameter key="odiseo_blog.controller.article.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="odiseo_blog.factory.article.class">Sylius\Component\Resource\Factory\TranslatableFactory</parameter>
    <parameter key="odiseo_blog.repository.article.class">Odiseo\BlogBundle\Doctrine\ORM\ArticleRepository</parameter>
    <parameter key="odiseo_blog.model.article_translation.class">Odiseo\BlogBundle\Model\ArticleTranslation</parameter>
    <parameter key="odiseo_blog.controller.article_translation.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="odiseo_blog.factory.article_translation.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="odiseo_blog.model.article_category.class">Odiseo\BlogBundle\Model\ArticleCategory</parameter>
    <parameter key="odiseo_blog.controller.article_category.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="odiseo_blog.factory.article_category.class">Sylius\Component\Resource\Factory\TranslatableFactory</parameter>
    <parameter key="odiseo_blog.repository.article_category.class">Odiseo\BlogBundle\Doctrine\ORM\ArticleCategoryRepository</parameter>
    <parameter key="odiseo_blog.model.article_category_translation.class">Odiseo\BlogBundle\Model\ArticleCategoryTranslation</parameter>
    <parameter key="odiseo_blog.controller.article_category_translation.class">Sylius\Bundle\ResourceBundle\Controller\ResourceController</parameter>
    <parameter key="odiseo_blog.factory.article_category_translation.class">Sylius\Component\Resource\Factory\Factory</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">Heron is the best animal in the world!</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en_US</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/var/www/OdiseoBlogBundle/tests/Application/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/appTestDebugProjectContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/var/www/OdiseoBlogBundle/tests/Application/app/config/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">appTestDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/OdiseoBlogBundle/tests/Application/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.firephp">null</parameter>
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">false</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/var/www/OdiseoBlogBundle/tests/Application/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="sm.configs" type="collection"/>
    <parameter key="sm.factory.class">SM\Factory\Factory</parameter>
    <parameter key="sm.callback_factory.class">winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory</parameter>
    <parameter key="sm.callback.class">winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallback</parameter>
    <parameter key="sm.twig_extension.class">SM\Extension\Twig\SMExtension</parameter>
    <parameter key="sm.callback.cascade_transition.class">SM\Callback\CascadeTransitionCallback</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.identical_property_naming_strategy.class">JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension.class">JMS\Serializer\Twig\SerializerRuntimeExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension_helper.class">JMS\Serializer\Twig\SerializerRuntimeHelper</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.xml_serialization_visitor.format_output">true</parameter>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.configured_context_factory.class">JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory</parameter>
    <parameter key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</parameter>
    <parameter key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</parameter>
    <parameter key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</parameter>
    <parameter key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</parameter>
    <parameter key="jms_serializer.cache.cache_warmer.class">JMS\SerializerBundle\Cache\CacheWarmer</parameter>
    <parameter key="hateoas.link_factory.class">Hateoas\Factory\LinkFactory</parameter>
    <parameter key="hateoas.links_factory.class">Hateoas\Factory\LinksFactory</parameter>
    <parameter key="hateoas.embeds_factory.class">Hateoas\Factory\EmbeddedsFactory</parameter>
    <parameter key="hateoas.expression.evaluator.class">Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator</parameter>
    <parameter key="bazinga_hateoas.expression_language.class">Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="hateoas.expression.link.class">Hateoas\Expression\LinkExpressionFunction</parameter>
    <parameter key="hateoas.serializer.xml.class">Hateoas\Serializer\XmlSerializer</parameter>
    <parameter key="hateoas.serializer.json_hal.class">Hateoas\Serializer\JsonHalSerializer</parameter>
    <parameter key="hateoas.serializer.exclusion_manager.class">Hateoas\Serializer\ExclusionManager</parameter>
    <parameter key="hateoas.event_subscriber.xml.class">Hateoas\Serializer\EventSubscriber\XmlEventSubscriber</parameter>
    <parameter key="hateoas.event_subscriber.json.class">Hateoas\Serializer\EventSubscriber\JsonEventSubscriber</parameter>
    <parameter key="hateoas.inline_deferrer.embeds.class">Hateoas\Serializer\Metadata\InlineDeferrer</parameter>
    <parameter key="hateoas.inline_deferrer.links.class">Hateoas\Serializer\Metadata\InlineDeferrer</parameter>
    <parameter key="hateoas.configuration.provider.resolver.chain.class">Hateoas\Configuration\Provider\Resolver\ChainResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.method.class">Hateoas\Configuration\Provider\Resolver\MethodResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.static_method.class">Hateoas\Configuration\Provider\Resolver\StaticMethodResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.symfony_container.class">Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver</parameter>
    <parameter key="hateoas.configuration.relation_provider.class">Hateoas\Configuration\Provider\RelationProvider</parameter>
    <parameter key="hateoas.configuration.relations_repository.class">Hateoas\Configuration\RelationsRepository</parameter>
    <parameter key="hateoas.configuration.metadata.yaml_driver.class">Hateoas\Configuration\Metadata\Driver\YamlDriver</parameter>
    <parameter key="hateoas.configuration.metadata.xml_driver.class">Hateoas\Configuration\Metadata\Driver\XmlDriver</parameter>
    <parameter key="hateoas.configuration.metadata.annotation_driver.class">Hateoas\Configuration\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="hateoas.configuration.metadata.extension_driver.class">Hateoas\Configuration\Metadata\Driver\ExtensionDriver</parameter>
    <parameter key="hateoas.generator.registry.class">Hateoas\UrlGenerator\UrlGeneratorRegistry</parameter>
    <parameter key="hateoas.generator.symfony.class">Hateoas\UrlGenerator\SymfonyUrlGenerator</parameter>
    <parameter key="hateoas.helper.link.class">Hateoas\Helper\LinkHelper</parameter>
    <parameter key="hateoas.twig.link.class">Hateoas\Twig\Extension\LinkExtension</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="sylius.state_machine.class">Sylius\Component\Resource\StateMachine\StateMachine</parameter>
    <parameter key="sylius.resource.settings" type="collection">
      <parameter key="paginate">null</parameter>
      <parameter key="limit">null</parameter>
      <parameter key="allowed_paginate" type="collection">
        <parameter>10</parameter>
        <parameter>20</parameter>
        <parameter>30</parameter>
      </parameter>
      <parameter key="default_page_size">10</parameter>
      <parameter key="sortable">false</parameter>
      <parameter key="sorting">null</parameter>
      <parameter key="filterable">false</parameter>
      <parameter key="criteria">null</parameter>
    </parameter>
    <parameter key="sylius.orm.repository.class">Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository</parameter>
    <parameter key="sylius.translation.translatable_listener.doctrine.orm.class">Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener</parameter>
    <parameter key="sylius.grid.templates.action" type="collection"/>
    <parameter key="sylius.grid.templates.bulk_action" type="collection"/>
    <parameter key="sylius.grid.templates.filter" type="collection"/>
    <parameter key="sylius.grids_definitions" type="collection"/>
    <parameter key="white_october_pagerfanta.default_view">default</parameter>
    <parameter key="white_october_pagerfanta.view_factory.class">Pagerfanta\View\ViewFactory</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.doctrine_cache.contains_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.delete_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.flush_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.stats_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.diff_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.execute_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.generate_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.latest_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.migrate_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.status_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.version_command</parameter>
      <parameter>sylius.console.command.resource_debug</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="odiseo_blog.controller.article" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>odiseo_blog.article</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler"/>
      <argument type="service" id="odiseo_blog.repository.article"/>
      <argument type="service" id="odiseo_blog.factory.article"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument type="service" id="sylius.resource_controller.state_machine"/>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="odiseo_blog.repository.article" class="Odiseo\BlogBundle\Doctrine\ORM\ArticleRepository" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service">
        <service class="Doctrine\ORM\Mapping\ClassMetadata" public="false">
          <argument>Odiseo\BlogBundle\Model\Article</argument>
          <factory service="doctrine.orm.default_entity_manager" method="getClassMetadata"/>
        </service>
      </argument>
    </service>
    <service id="odiseo_blog.factory.article" class="Sylius\Component\Resource\Factory\TranslatableFactory" public="true">
      <argument type="service">
        <service class="Sylius\Component\Resource\Factory\Factory">
          <argument>Odiseo\BlogBundle\Model\Article</argument>
        </service>
      </argument>
      <argument type="service" id="sylius.translation_locale_provider.immutable"/>
    </service>
    <service id="odiseo_blog.controller.article_translation" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>odiseo_blog.article_translation</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler"/>
      <argument type="service" id="odiseo_blog.repository.article_translation"/>
      <argument type="service" id="odiseo_blog.factory.article_translation"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument type="service" id="sylius.resource_controller.state_machine"/>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="odiseo_blog.repository.article_translation" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service">
        <service class="Doctrine\ORM\Mapping\ClassMetadata" public="false">
          <argument>Odiseo\BlogBundle\Model\ArticleTranslation</argument>
          <factory service="doctrine.orm.default_entity_manager" method="getClassMetadata"/>
        </service>
      </argument>
    </service>
    <service id="odiseo_blog.factory.article_translation" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <argument>Odiseo\BlogBundle\Model\ArticleTranslation</argument>
    </service>
    <service id="odiseo_blog.controller.article_category" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>odiseo_blog.article_category</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler"/>
      <argument type="service" id="odiseo_blog.repository.article_category"/>
      <argument type="service" id="odiseo_blog.factory.article_category"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument type="service" id="sylius.resource_controller.state_machine"/>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="odiseo_blog.repository.article_category" class="Odiseo\BlogBundle\Doctrine\ORM\ArticleCategoryRepository" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service">
        <service class="Doctrine\ORM\Mapping\ClassMetadata" public="false">
          <argument>Odiseo\BlogBundle\Model\ArticleCategory</argument>
          <factory service="doctrine.orm.default_entity_manager" method="getClassMetadata"/>
        </service>
      </argument>
    </service>
    <service id="odiseo_blog.factory.article_category" class="Sylius\Component\Resource\Factory\TranslatableFactory" public="true">
      <argument type="service">
        <service class="Sylius\Component\Resource\Factory\Factory">
          <argument>Odiseo\BlogBundle\Model\ArticleCategory</argument>
        </service>
      </argument>
      <argument type="service" id="sylius.translation_locale_provider.immutable"/>
    </service>
    <service id="odiseo_blog.controller.article_category_translation" class="Sylius\Bundle\ResourceBundle\Controller\ResourceController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service">
        <service class="Sylius\Component\Resource\Metadata\Metadata">
          <argument>odiseo_blog.article_category_translation</argument>
          <factory service="sylius.resource_registry" method="get"/>
        </service>
      </argument>
      <argument type="service" id="sylius.resource_controller.request_configuration_factory"/>
      <argument type="service" id="sylius.resource_controller.view_handler"/>
      <argument type="service" id="odiseo_blog.repository.article_category_translation"/>
      <argument type="service" id="odiseo_blog.factory.article_category_translation"/>
      <argument type="service" id="sylius.resource_controller.new_resource_factory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="sylius.resource_controller.single_resource_provider"/>
      <argument type="service" id="sylius.resource_controller.resources_collection_provider"/>
      <argument type="service" id="sylius.resource_controller.form_factory"/>
      <argument type="service" id="sylius.resource_controller.redirect_handler"/>
      <argument type="service" id="sylius.resource_controller.flash_helper"/>
      <argument type="service" id="sylius.resource_controller.authorization_checker.disabled"/>
      <argument type="service" id="sylius.resource_controller.event_dispatcher"/>
      <argument type="service" id="sylius.resource_controller.state_machine"/>
      <argument type="service" id="sylius.resource_controller.resource_update_handler"/>
      <argument type="service" id="sylius.resource_controller.resource_delete_handler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="odiseo_blog.repository.article_category_translation" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service">
        <service class="Doctrine\ORM\Mapping\ClassMetadata" public="false">
          <argument>Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
          <factory service="doctrine.orm.default_entity_manager" method="getClassMetadata"/>
        </service>
      </argument>
    </service>
    <service id="odiseo_blog.factory.article_category_translation" class="Sylius\Component\Resource\Factory\Factory" public="true">
      <argument>Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
    </service>
    <service id="odiseo_blog.form.type.article" class="Odiseo\BlogBundle\Form\Type\ArticleType">
      <tag name="form.type" alias="odiseo_blog_article"/>
      <argument>Odiseo\BlogBundle\Model\Article</argument>
      <argument type="collection">
        <argument>odiseo</argument>
      </argument>
    </service>
    <service id="odiseo_blog.form.type.article_translation" class="Odiseo\BlogBundle\Form\Type\ArticleTranslationType">
      <tag name="form.type" alias="odiseo_blog_article_translation"/>
      <argument>Odiseo\BlogBundle\Model\ArticleTranslation</argument>
      <argument type="collection">
        <argument>odiseo</argument>
      </argument>
    </service>
    <service id="odiseo_blog.form.type.article_category" class="Odiseo\BlogBundle\Form\Type\ArticleCategoryType">
      <tag name="form.type" alias="odiseo_blog_article_category"/>
      <argument>Odiseo\BlogBundle\Model\ArticleCategory</argument>
      <argument type="collection">
        <argument>odiseo</argument>
      </argument>
    </service>
    <service id="odiseo_blog.form.type.article_category_translation" class="Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType">
      <tag name="form.type" alias="odiseo_blog_article_category_translation"/>
      <argument>Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
      <argument type="collection">
        <argument>odiseo</argument>
      </argument>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en_US</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/Resources</argument>
      <argument type="collection">
        <argument>/var/www/OdiseoBlogBundle/tests/Application/app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>Heron is the best animal in the world!</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="debug.stopwatch">reset</argument>
        <argument key="form.type.entity">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.gmwRZ3h"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/translations</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en_US</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/translations</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Odiseo\BlogBundle\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter</argument>
      </argument>
      <argument type="collection">
        <argument>Odiseo\BlogBundle\Form\Type\ArticleType</argument>
        <argument>Odiseo\BlogBundle\Form\Type\ArticleTranslationType</argument>
        <argument>Odiseo\BlogBundle\Form\Type\ArticleCategoryType</argument>
        <argument>Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <argument>HHXyrtc9zd</argument>
      <argument>0</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Simple\Psr6Cache" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <argument>RM9-xoc5Y-</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>dslZtUtysK</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>dfyJ13ASBZ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>O2AksIA6Ku</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id=".1_ServiceLocator~DSAbBY0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\Client" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false" public="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false" public="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\TestSessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".1_ServiceLocator~DSAbBY0"/>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <argument type="collection">
        <argument key="odiseo_blog.form.type.article" type="service" id="odiseo_blog.form.type.article" on-invalid="ignore_uninitialized"/>
        <argument key="odiseo_blog.form.type.article_translation" type="service" id="odiseo_blog.form.type.article_translation" on-invalid="ignore_uninitialized"/>
        <argument key="odiseo_blog.form.type.article_category" type="service" id="odiseo_blog.form.type.article_category" on-invalid="ignore_uninitialized"/>
        <argument key="odiseo_blog.form.type.article_category_translation" type="service" id="odiseo_blog.form.type.article_category_translation" on-invalid="ignore_uninitialized"/>
        <argument key="controller_name_converter" type="service" id="controller_name_converter" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="streamed_response_listener" type="service" id="streamed_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="resolve_controller_name_subscriber" type="service" id="resolve_controller_name_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.simple" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="translator.selector" type="service" id="translator.selector" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.metadata_bag" type="service" id="session.storage.metadata_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.native" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.php_bridge" type="service" id="session.storage.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session.flash_bag" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.attribute_bag" type="service" id="session.attribute_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.mock_file" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="session.save_listener" type="service" id="session.save_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.csrf" type="service" id="form.type_extension.csrf" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service" id="assets._default_package" on-invalid="ignore_uninitialized"/>
        <argument key="templating.engine.delegating" type="service" id="templating.engine.delegating" on-invalid="ignore_uninitialized"/>
        <argument key="templating.name_parser" type="service" id="templating.name_parser" on-invalid="ignore_uninitialized"/>
        <argument key="templating.filename_parser" type="service" id="templating.filename_parser" on-invalid="ignore_uninitialized"/>
        <argument key="templating.locator" type="service" id="templating.locator" on-invalid="ignore_uninitialized"/>
        <argument key="templating.finder" type="service" id="templating.finder" on-invalid="ignore_uninitialized"/>
        <argument key="templating.cache_warmer.template_paths" type="service" id="templating.cache_warmer.template_paths" on-invalid="ignore_uninitialized"/>
        <argument key="templating.loader.filesystem" type="service" id="templating.loader.filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="templating.loader.cache" type="service" id="templating.loader.cache" on-invalid="ignore_uninitialized"/>
        <argument key="templating.loader.chain" type="service" id="templating.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.symfony" type="service" id="validator.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php" type="service" id="translation.extractor.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translator_listener" type="service" id="translator_listener" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.service" type="service" id="routing.loader.service" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation" type="service" id="routing.loader.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.directory" type="service" id="routing.loader.annotation.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.file" type="service" id="routing.loader.annotation.file" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.reader" type="service" id="annotations.reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.dummy_registry" type="service" id="annotations.dummy_registry" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cached_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.filesystem_cache" type="service" id="annotations.filesystem_cache" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache_warmer" type="service" id="annotations.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache" type="service" id="annotations.cache" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.cache_warmer" type="service" id="twig.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.assets" type="service" id="twig.extension.assets" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.code" type="service" id="twig.extension.code" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.translation.extractor" type="service" id="twig.translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="twig.exception_listener" type="service" id="twig.exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.form" type="service" id="twig.extension.form" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.renderer" type="service" id="twig.form.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service" id="twig.loader.filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="templating.engine.twig" type="service" id="templating.engine.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.chrome_php" type="service" id="monolog.formatter.chrome_php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.gelf_message" type="service" id="monolog.formatter.gelf_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.html" type="service" id="monolog.formatter.html" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.json" type="service" id="monolog.formatter.json" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.line" type="service" id="monolog.formatter.line" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.loggly" type="service" id="monolog.formatter.loggly" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.normalizer" type="service" id="monolog.formatter.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.scalar" type="service" id="monolog.formatter.scalar" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.wildfire" type="service" id="monolog.formatter.wildfire" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.logstash" type="service" id="monolog.formatter.logstash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.processor.psr_log_message" type="service" id="monolog.processor.psr_log_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.firephp" type="service" id="monolog.handler.firephp" on-invalid="ignore_uninitialized"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run" on-invalid="ignore_uninitialized"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start" on-invalid="ignore_uninitialized"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop" on-invalid="ignore_uninitialized"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status" on-invalid="ignore_uninitialized"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_cache.contains_command" type="service" id="doctrine_cache.contains_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_cache.delete_command" type="service" id="doctrine_cache.delete_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_cache.flush_command" type="service" id="doctrine_cache.flush_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_cache.stats_command" type="service" id="doctrine_cache.stats_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger" type="service" id="doctrine.dbal.logger" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.profiling.default" type="service" id="doctrine.dbal.logger.profiling.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.chain.default" type="service" id="doctrine.dbal.logger.chain.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service" id="doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service" id="doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.metadata_factory" type="service" id="doctrine.orm.default_entity_manager.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command" on-invalid="ignore_uninitialized"/>
        <argument key="sm.twig_extension" type="service" id="sm.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.event_dispatcher" type="service" id="jms_serializer.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.handler_registry" type="service" id="jms_serializer.handler_registry" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.file_locator" type="service" id="jms_serializer.metadata.file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.yaml_driver" type="service" id="jms_serializer.metadata.yaml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.xml_driver" type="service" id="jms_serializer.metadata.xml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.php_driver" type="service" id="jms_serializer.metadata.php_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.annotation_driver" type="service" id="jms_serializer.metadata.annotation_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.chain_driver" type="service" id="jms_serializer.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_type_driver" type="service" id="jms_serializer.metadata.doctrine_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_phpcr_type_driver" type="service" id="jms_serializer.metadata.doctrine_phpcr_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.lazy_loading_driver" type="service" id="jms_serializer.metadata.lazy_loading_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache.file_cache" type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata_factory" type="service" id="jms_serializer.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.camel_case_naming_strategy" type="service" id="jms_serializer.camel_case_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.identical_property_naming_strategy" type="service" id="jms_serializer.identical_property_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serialized_name_annotation_strategy" type="service" id="jms_serializer.serialized_name_annotation_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.cache_naming_strategy" type="service" id="jms_serializer.cache_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_object_constructor" type="service" id="jms_serializer.doctrine_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_phpcr_object_constructor" type="service" id="jms_serializer.doctrine_phpcr_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.unserialize_object_constructor" type="service" id="jms_serializer.unserialize_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serializer" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_evaluator" type="service" id="jms_serializer.expression_evaluator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language" type="service" id="jms_serializer.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language.function_provider" type="service" id="jms_serializer.expression_language.function_provider" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.twig_extension.serializer" type="service" id="jms_serializer.twig_extension.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.templating.helper.serializer" type="service" id="jms_serializer.templating.helper.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy.default" type="service" id="jms_serializer.accessor_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy.expression" type="service" id="jms_serializer.accessor_strategy.expression" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_serialization_context_factory" type="service" id="jms_serializer.configured_serialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_deserialization_context_factory" type="service" id="jms_serializer.configured_deserialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.link_factory" type="service" id="hateoas.link_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.links_factory" type="service" id="hateoas.links_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.embeds_factory" type="service" id="hateoas.embeds_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.expression.evaluator" type="service" id="hateoas.expression.evaluator" on-invalid="ignore_uninitialized"/>
        <argument key="bazinga_hateoas.expression_language" type="service" id="bazinga_hateoas.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.xml" type="service" id="hateoas.serializer.xml" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.json_hal" type="service" id="hateoas.serializer.json_hal" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.serializer.exclusion_manager" type="service" id="hateoas.serializer.exclusion_manager" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.inline_deferrer.embeds" type="service" id="hateoas.inline_deferrer.embeds" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.inline_deferrer.links" type="service" id="hateoas.inline_deferrer.links" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.resolver.chain" type="service" id="hateoas.configuration.provider.resolver.chain" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.resolver.method" type="service" id="hateoas.configuration.provider.resolver.method" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.resolver.static_method" type="service" id="hateoas.configuration.provider.resolver.static_method" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.resolver.symfony_container" type="service" id="hateoas.configuration.provider.resolver.symfony_container" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.relation_provider" type="service" id="hateoas.configuration.relation_provider" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.relations_repository" type="service" id="hateoas.configuration.relations_repository" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.yaml_driver" type="service" id="hateoas.configuration.metadata.yaml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.xml_driver" type="service" id="hateoas.configuration.metadata.xml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.annotation_driver" type="service" id="hateoas.configuration.metadata.annotation_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.extension_driver" type="service" id="hateoas.configuration.metadata.extension_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.chain_driver" type="service" id="hateoas.configuration.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.cache.file_cache" type="service" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata_factory" type="service" id="hateoas.configuration.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.generator.symfony" type="service" id="hateoas.generator.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.twig.link" type="service" id="hateoas.twig.link" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.jsonp" type="service" id="fos_rest.view_handler.jsonp" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.directory" type="service" id="fos_rest.routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.controller" type="service" id="fos_rest.routing.loader.controller" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.processor" type="service" id="fos_rest.routing.loader.processor" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.yaml_collection" type="service" id="fos_rest.routing.loader.yaml_collection" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.xml_collection" type="service" id="fos_rest.routing.loader.xml_collection" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.reader.controller" type="service" id="fos_rest.routing.loader.reader.controller" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.routing.loader.reader.action" type="service" id="fos_rest.routing.loader.reader.action" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.inflector.doctrine" type="service" id="fos_rest.inflector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request.param_fetcher" type="service" id="fos_rest.request.param_fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request.param_fetcher.reader" type="service" id="fos_rest.request.param_fetcher.reader" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.jms" type="service" id="fos_rest.serializer.jms" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.symfony" type="service" id="fos_rest.serializer.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_normalizer" type="service" id="fos_rest.serializer.form_error_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.exception_listener" type="service" id="fos_rest.exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.exception.codes_map" type="service" id="fos_rest.exception.codes_map" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.exception.messages_map" type="service" id="fos_rest.exception.messages_map" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.exception_normalizer.jms" type="service" id="fos_rest.serializer.exception_normalizer.jms" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.exception_normalizer.symfony" type="service" id="fos_rest.serializer.exception_normalizer.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.normalizer.camel_keys" type="service" id="fos_rest.normalizer.camel_keys" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.normalizer.camel_keys_with_leading_underscore" type="service" id="fos_rest.normalizer.camel_keys_with_leading_underscore" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.json" type="service" id="fos_rest.decoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.jsontoform" type="service" id="fos_rest.decoder.jsontoform" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder.xml" type="service" id="fos_rest.decoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.decoder_provider" type="service" id="fos_rest.decoder_provider" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.body_listener" type="service" id="fos_rest.body_listener" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.format_listener" type="service" id="fos_rest.format_listener" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.format_negotiator" type="service" id="fos_rest.format_negotiator" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.parameters_parser" type="service" id="sylius.resource_controller.parameters_parser" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.request_configuration_factory" type="service" id="sylius.resource_controller.request_configuration_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.new_resource_factory" type="service" id="sylius.resource_controller.new_resource_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.single_resource_provider" type="service" id="sylius.resource_controller.single_resource_provider" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.pagerfanta_representation_factory" type="service" id="sylius.resource_controller.pagerfanta_representation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_collection_provider" type="service" id="sylius.resource_controller.resources_collection_provider" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.form_factory" type="service" id="sylius.resource_controller.form_factory" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.redirect_handler" type="service" id="sylius.resource_controller.redirect_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.authorization_checker.disabled" type="service" id="sylius.resource_controller.authorization_checker.disabled" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.flash_helper" type="service" id="sylius.resource_controller.flash_helper" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.event_dispatcher" type="service" id="sylius.resource_controller.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.view_handler" type="service" id="sylius.resource_controller.view_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.state_machine" type="service" id="sylius.resource_controller.state_machine" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resource_update_handler" type="service" id="sylius.resource_controller.resource_update_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resource_delete_handler" type="service" id="sylius.resource_controller.resource_delete_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.routing.loader.resource" type="service" id="sylius.routing.loader.resource" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form.type_extension.form.request_handler" type="service" id="sylius.form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_registry" type="service" id="sylius.resource_registry" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.expression_language" type="service" id="sylius.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.registry.resource_repository" type="service" id="sylius.registry.resource_repository" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.registry.form_builder" type="service" id="sylius.registry.form_builder" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid_options_parser" type="service" id="sylius.grid_options_parser" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form_builder.default" type="service" id="sylius.form_builder.default" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form_registry.grid_filter" type="service" id="sylius.form_registry.grid_filter" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.extension.grid" type="service" id="sylius.twig.extension.grid" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.twig.extension.bulk_action_grid" type="service" id="sylius.twig.extension.bulk_action_grid" on-invalid="ignore_uninitialized"/>
        <argument key="white_october_pagerfanta.view_factory" type="service" id="white_october_pagerfanta.view_factory" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.default" type="service" id="pagerfanta.view.default" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.default_translated" type="service" id="pagerfanta.view.default_translated" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap" type="service" id="pagerfanta.view.twitter_bootstrap" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap3" type="service" id="pagerfanta.view.twitter_bootstrap3" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap4" type="service" id="pagerfanta.view.twitter_bootstrap4" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.semantic_ui" type="service" id="pagerfanta.view.semantic_ui" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap4_translated" type="service" id="pagerfanta.view.twitter_bootstrap4_translated" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap3_translated" type="service" id="pagerfanta.view.twitter_bootstrap3_translated" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.twitter_bootstrap_translated" type="service" id="pagerfanta.view.twitter_bootstrap_translated" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.view.semantic_ui_translated" type="service" id="pagerfanta.view.semantic_ui_translated" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.pagerfanta" type="service" id="twig.extension.pagerfanta" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener" type="service" id="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener" on-invalid="ignore_uninitialized"/>
        <argument key="pagerfanta.convert_not_valid_current_page_to_not_found_listener" type="service" id="pagerfanta.convert_not_valid_current_page_to_not_found_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.request" type="service" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.console" type="service" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.cache" type="service" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.templating" type="service" id="monolog.logger.templating" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.translation" type="service" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.php" type="service" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.event" type="service" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.router" type="service" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.doctrine" type="service" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.null_internal" type="service" id="monolog.handler.null_internal" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" type="service" id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service" id="fos_rest.serializer.form_error_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.form.type_extension.form.request_handler.inner" type="service" id="sylius.form.type_extension.form.request_handler.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_resolver.grid_aware.inner" type="service" id="sylius.resource_controller.resources_resolver.grid_aware.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.custom_grid_renderer.twig.inner" type="service" id="sylius.custom_grid_renderer.twig.inner" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.custom_bulk_action_grid_renderer.twig.inner" type="service" id="sylius.custom_bulk_action_grid_renderer.twig.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute.inner" type="service" id="debug.argument_resolver.request_attribute.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request.inner" type="service" id="debug.argument_resolver.request.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session.inner" type="service" id="debug.argument_resolver.session.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service.inner" type="service" id="debug.argument_resolver.service.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default.inner" type="service" id="debug.argument_resolver.default.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic.inner" type="service" id="debug.argument_resolver.variadic.inner" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer.form_error_handler.inner" type="service" id="fos_rest.serializer.form_error_handler.inner" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\SimpleCache\CacheInterface" type="service" id="cache.app.simple" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Cache\Adapter\AdapterInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\TranslatorInterface" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\SessionInterface" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.filesystem" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormFactoryInterface" type="service" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Annotations\Reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Twig_Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Driver\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bridge\Doctrine\RegistryInterface" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ObjectManager" type="service" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.metadata.annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache" type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.naming_strategy" type="service" id="jms_serializer.cache_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\SerializerInterface" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ArrayTransformerInterface" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy" type="service" id="jms_serializer.accessor_strategy.expression" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.provider.resolver" type="service" id="hateoas.configuration.provider.resolver.chain" on-invalid="ignore_uninitialized"/>
        <argument key="hateoas.configuration.metadata.cache" type="service" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="FOS\RestBundle\View\ViewHandlerInterface" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="FOS\RestBundle\Request\ParamFetcherInterface" type="service" id="fos_rest.request.param_fetcher" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.router" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.templating" type="service" id="templating.engine.twig" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.inflector" type="service" id="fos_rest.inflector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.authorization_checker" type="service" id="sylius.resource_controller.authorization_checker.disabled" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.renderer" type="service" id="sylius.custom_grid_renderer.twig" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.bulk_action_renderer" type="service" id="sylius.custom_bulk_action_grid_renderer.twig" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.grid.data_extractor" type="service" id="sylius.grid.data_extractor.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service" id=".service_locator.9_yeNH1" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Templating\EngineInterface" type="service" id="templating.engine.twig" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" type="service" id="templating.engine.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service" id="twig.loader.filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.serializer" type="service" id="fos_rest.serializer.jms" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service" id="sylius.form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="sylius.resource_controller.resources_resolver" type="service" id="sylius.resource_controller.resources_resolver.grid_aware" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".2_ServiceLocator~rFkAA2T" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".1_NativeFileSessionHandler~rFkAA2T" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.mock_file"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~rFkAA2T"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".2_ServiceLocator~rFkAA2T"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.mzpr0gr"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType" type="iterator">
          <argument type="service" id="sylius.form.extension.type.collection"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="sylius.form.type_extension.form.request_handler"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser" public="false"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".1_PhpArrayAdapter~XA8ocTA" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/var/www/OdiseoBlogBundle/src/Resources/config/validation/Article.yml</argument>
          <argument>/var/www/OdiseoBlogBundle/src/Resources/config/validation/ArticleCategory.yml</argument>
          <argument>/var/www/OdiseoBlogBundle/src/Resources/config/validation/ArticleCategoryTranslation.yml</argument>
          <argument>/var/www/OdiseoBlogBundle/src/Resources/config/validation/ArticleTranslation.yml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id=".1_PhpArrayAdapter~XA8ocTA"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Af1b9SX"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <argument type="service" id=".service_locator.yQVjGlt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en_US</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.ar.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.ar.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ar.xliff</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.az.xliff</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.bg.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.bg.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.bg.yml</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.ca.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.cs.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.cs.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.cs.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.da.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.da.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.da.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.da.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.de.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.de.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.de.xliff</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.el.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.el.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/src/Resources/translations/messages.en.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/src/Resources/translations/validators.en.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.en.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.en.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/src/Resources/translations/messages.es.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/src/Resources/translations/validators.es.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.es.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.es.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.fa.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.fa.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.fi.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.fr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.fr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.fr.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.gl.xliff</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.he.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.hr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.hr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.hr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.hu.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.hu.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.hu.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.id.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.id.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.it.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.it.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.it.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.ja.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.ja.yml</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.lt.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.lt.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.lt.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.nl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.nl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.nl.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.no.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.no.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.pl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.pl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.pl.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.pt.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.pt.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.pt_BR.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.pt_BR.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.pt_BR.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.ro.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.ro.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ro.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.ru.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.ru.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ru.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.sk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.sl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.sq.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sq.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.sq.yml</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Cyrl.xliff</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Latn.xliff</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sv.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sv.xliff</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.th.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.th.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.th.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.th.xliff</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.tr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.tr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.tr.xliff</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.uk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.uk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.uk.xliff</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.zh_CN.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.zh_CN.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.zh_TW.yml</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.be.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.be.yml</argument>
          </argument>
          <argument key="de_CH" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.de_CH.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.de_CH.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.de_CH.yml</argument>
          </argument>
          <argument key="sr" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.sr.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sr.yml</argument>
          </argument>
          <argument key="sr_CS" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/flashes.sr_CS.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/messages.sr_CS.yml</argument>
            <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/translations/validators.sr_CS.yml</argument>
          </argument>
          <argument key="oc" type="collection">
            <argument>/var/www/OdiseoBlogBundle/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.oc.xliff</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en_US</argument>
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.3nNxzEJ.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.firephp"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.format_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>192</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="sylius.storage.cookie"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sylius.storage.cookie"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener"/>
          <argument>onException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.convert_not_valid_current_page_to_not_found_listener"/>
          <argument>onException</argument>
        </argument>
        <argument>512</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.controller"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sylius.routing.loader.resource"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.oNnsU_h.router.default"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/config/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appTestDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appTestDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.tdKlFgs.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument type="service" id="templating.engine.twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~p3vMWyn" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~p3vMWyn" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~p3vMWyn"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~p3vMWyn"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="exception_controller">twig.controller.exception::showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">false</argument>
        <argument key="default_path">/var/www/OdiseoBlogBundle/tests/Application/templates</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sm.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="hateoas.twig.link"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sylius.twig.extension.grid"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sylius.twig.extension.bulk_action_grid"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.pagerfanta"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>test</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.UEpceA5.twig.cache_warmer"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app</argument>
      <argument type="collection">
        <argument key="/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.UEpceA5.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application</argument>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/views</argument>
        <argument>SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/views</argument>
        <argument>!SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.CS9cV_I"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application</argument>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/views</argument>
        <argument>SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/sylius/resource-bundle/Resources/views</argument>
        <argument>!SyliusResource</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/OdiseoBlogBundle/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/logs/test.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.firephp" class="Symfony\Bridge\Monolog\Handler\FirePHPHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument>200</argument>
      <argument>true</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/public</argument>
      <argument>test</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>/var/www/OdiseoBlogBundle/tests/Application/public</argument>
      <argument>test</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="web_server.command.server_log" class="Symfony\Bundle\WebServerBundle\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="sylius.event_subscriber.orm_mapped_super_class"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sylius.event_subscriber.orm_repository_class"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sylius.translation.translatable_listener.doctrine.orm"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.listeners.resolve_target_entity"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_sqlite</argument>
        <argument key="path">/var/www/OdiseoBlogBundle/tests/Application/var/db_test.sql</argument>
        <argument key="charset">UTF8</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.9_yeNH1"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
      <call method="addResolveTargetEntity">
        <argument>Odiseo\BlogBundle\Model\ArticleInterface</argument>
        <argument>Odiseo\BlogBundle\Model\Article</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Odiseo\BlogBundle\Model\ArticleTranslationInterface</argument>
        <argument>Odiseo\BlogBundle\Model\ArticleTranslation</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Odiseo\BlogBundle\Model\ArticleCategoryInterface</argument>
        <argument>Odiseo\BlogBundle\Model\ArticleCategory</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Odiseo\BlogBundle\Model\ArticleCategoryTranslationInterface</argument>
        <argument>Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection"/>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>false</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.default"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\YamlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/var/www/OdiseoBlogBundle/src/Resources/config/doctrine/model">Odiseo\BlogBundle\Model</argument>
                </argument>
                <argument>.orm.yml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Odiseo\BlogBundle\Model</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f7cab019f6c94797d3eccd65078c82d73466c5f2187a063eedd8189fec43a6f3</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f7cab019f6c94797d3eccd65078c82d73466c5f2187a063eedd8189fec43a6f3</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f7cab019f6c94797d3eccd65078c82d73466c5f2187a063eedd8189fec43a6f3</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata" connection="default"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="sm.factory" class="SM\Factory\Factory" public="true">
      <argument type="collection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="sm.callback_factory"/>
    </service>
    <service id="sm.callback_factory" class="winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory" public="true">
      <argument>winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallback</argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sm.twig_extension" class="SM\Extension\Twig\SMExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sm.factory"/>
    </service>
    <service id="sm.callback.cascade_transition" class="SM\Callback\CascadeTransitionCallback" public="true">
      <argument type="service" id="sm.factory"/>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id=".service_locator.hyjeIN3"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>hateoas.event_subscriber.xml</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>xml</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>hateoas.event_subscriber.json</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>json</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id=".service_locator.mQKuaEF"/>
      <argument type="collection">
        <argument key="2" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromyml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
        <argument key="1" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="Exception" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>America/Buenos_Aires</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.php_driver" class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.php_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.cache_naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy" public="false">
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <call method="setSerializationContextFactory">
        <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      </call>
      <call method="setDeserializationContextFactory">
        <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      </call>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false"/>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
    <service id="jms_serializer.accessor_strategy.expression" class="JMS\Serializer\Accessor\ExpressionAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor" public="true">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor" public="true">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="hateoas.link_factory" class="Hateoas\Factory\LinkFactory" public="false">
      <argument type="service" id="hateoas.expression.evaluator"/>
      <argument type="service" id="hateoas.generator.registry"/>
    </service>
    <service id="hateoas.links_factory" class="Hateoas\Factory\LinksFactory" public="false">
      <argument type="service" id="hateoas.configuration.relations_repository"/>
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.embeds_factory" class="Hateoas\Factory\EmbeddedsFactory" public="false">
      <argument type="service" id="hateoas.configuration.relations_repository"/>
      <argument type="service" id="hateoas.expression.evaluator"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.expression.evaluator" class="Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator">
      <argument type="service" id="bazinga_hateoas.expression_language"/>
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
      <call method="setContextVariable">
        <argument>container</argument>
        <argument type="service" id="service_container"/>
      </call>
      <call method="registerFunctionId">
        <argument>hateoas.expression.link</argument>
      </call>
    </service>
    <service id="bazinga_hateoas.expression_language" class="Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage"/>
    <service id="hateoas.expression.link" class="Hateoas\Expression\LinkExpressionFunction" public="true">
      <tag name="hateoas.expression_function"/>
      <argument type="service" id="hateoas.helper.link"/>
    </service>
    <service id="hateoas.serializer.xml" class="Hateoas\Serializer\XmlSerializer" public="false">
      <call method="setMetadataFactory">
        <argument type="service" id="jms_serializer.metadata_factory"/>
      </call>
    </service>
    <service id="hateoas.serializer.json_hal" class="Hateoas\Serializer\JsonHalSerializer" public="false"/>
    <service id="hateoas.serializer.exclusion_manager" class="Hateoas\Serializer\ExclusionManager">
      <argument type="service" id="hateoas.expression.evaluator"/>
    </service>
    <service id="hateoas.event_subscriber.xml" class="Hateoas\Serializer\EventSubscriber\XmlEventSubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="hateoas.serializer.xml"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
    </service>
    <service id="hateoas.event_subscriber.json" class="Hateoas\Serializer\EventSubscriber\JsonEventSubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="hateoas.serializer.json_hal"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
      <argument type="service" id="hateoas.inline_deferrer.embeds"/>
      <argument type="service" id="hateoas.inline_deferrer.links"/>
    </service>
    <service id="hateoas.inline_deferrer.embeds" class="Hateoas\Serializer\Metadata\InlineDeferrer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
    </service>
    <service id="hateoas.inline_deferrer.links" class="Hateoas\Serializer\Metadata\InlineDeferrer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.chain" class="Hateoas\Configuration\Provider\Resolver\ChainResolver" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\MethodResolver" public="false">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\StaticMethodResolver" public="false">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver" public="false">
            <tag name="hateoas.relation_provider"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="hateoas.configuration.provider.resolver.method" class="Hateoas\Configuration\Provider\Resolver\MethodResolver" public="false">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.static_method" class="Hateoas\Configuration\Provider\Resolver\StaticMethodResolver" public="false">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.symfony_container" class="Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver" public="false">
      <tag name="hateoas.relation_provider"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="hateoas.configuration.relation_provider" class="Hateoas\Configuration\Provider\RelationProvider" public="false">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="hateoas.configuration.provider.resolver.chain"/>
    </service>
    <service id="hateoas.configuration.relations_repository" class="Hateoas\Configuration\RelationsRepository" public="false">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="hateoas.configuration.relation_provider"/>
    </service>
    <service id="hateoas.configuration.metadata.yaml_driver" class="Hateoas\Configuration\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="hateoas.configuration.metadata.xml_driver" class="Hateoas\Configuration\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="hateoas.configuration.metadata.annotation_driver" class="Hateoas\Configuration\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="hateoas.configuration.metadata.extension_driver" class="Hateoas\Configuration\Metadata\Driver\ExtensionDriver" public="false">
      <argument type="service" id="hateoas.configuration.metadata.annotation_driver"/>
    </service>
    <service id="hateoas.configuration.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="hateoas.configuration.metadata.yaml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.xml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.extension_driver"/>
      </argument>
    </service>
    <service id="hateoas.configuration.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/var/www/OdiseoBlogBundle/tests/Application/app/cache/test/hateoas</argument>
    </service>
    <service id="hateoas.configuration.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="hateoas.configuration.metadata.chain_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="hateoas.generator.registry" class="Hateoas\UrlGenerator\UrlGeneratorRegistry" public="true">
      <argument type="service" id="hateoas.generator.symfony"/>
    </service>
    <service id="hateoas.generator.symfony" class="Hateoas\UrlGenerator\SymfonyUrlGenerator">
      <argument type="service" id="router.default"/>
    </service>
    <service id="hateoas.helper.link" class="Hateoas\Helper\LinkHelper" public="true">
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.configuration.relations_repository"/>
    </service>
    <service id="hateoas.twig.link" class="Hateoas\Twig\Extension\LinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="hateoas.helper.link"/>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" public="false">
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="templating.engine.twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setSerializeNullStrategy">
        <argument>false</argument>
      </call>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler" public="false">
      <argument></argument>
    </service>
    <service id="fos_rest.routing.loader.directory" class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader" public="false">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Inflector\DoctrineInflector" public="false"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" public="false" lazy="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter" public="false" lazy="true">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.exception_listener" class="FOS\RestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.exception.twig_controller::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.exception.controller" class="FOS\RestBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.exception.twig_controller" class="FOS\RestBundle\Controller\TwigExceptionController" public="true">
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.exception.messages_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.jms" class="FOS\RestBundle\Serializer\Normalizer\ExceptionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.symfony" class="FOS\RestBundle\Serializer\Normalizer\ExceptionNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id=".service_locator.kuaDcLh"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id=".service_locator.kuaDcLh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service" id="fos_rest.decoder.json"/>
        <argument key="fos_rest.decoder.xml" type="service" id="fos_rest.decoder.xml"/>
      </argument>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
            <argument>xml</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478"/>
        <argument type="collection">
          <argument key="stop">true</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="prefer_extension">2.0</argument>
          <argument key="fallback_format">html</argument>
          <argument key="priorities" type="collection"/>
        </argument>
      </call>
    </service>
    <service id="fos_rest.format_request_matcher" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false" abstract="true"/>
    <service id="sylius.console.command.resource_debug" class="Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand" public="true">
      <tag name="console.command"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.resource_controller.parameters_parser" class="Sylius\Bundle\ResourceBundle\Controller\ParametersParser" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="sylius.expression_language"/>
    </service>
    <service id="sylius.resource_controller.request_configuration_factory" class="Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactory" public="false">
      <argument type="service" id="sylius.resource_controller.parameters_parser"/>
      <argument>Sylius\Bundle\ResourceBundle\Controller\RequestConfiguration</argument>
      <argument>%sylius.resource.settings%</argument>
    </service>
    <service id="sylius.resource_controller.new_resource_factory" class="Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory" public="false"/>
    <service id="sylius.resource_controller.single_resource_provider" class="Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider" public="false"/>
    <service id="sylius.resource_controller.pagerfanta_representation_factory" class="Hateoas\Representation\Factory\PagerfantaFactory" public="false"/>
    <service id="sylius.resource_controller.resources_collection_provider" class="Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProvider" public="false">
      <argument type="service" id="sylius.resource_controller.resources_resolver.grid_aware"/>
      <argument type="service" id="sylius.resource_controller.pagerfanta_representation_factory"/>
    </service>
    <service id="sylius.resource_controller.form_factory" class="Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactory" public="false">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sylius.resource_controller.redirect_handler" class="Sylius\Bundle\ResourceBundle\Controller\RedirectHandler" public="false">
      <argument type="service" id="router.default"/>
    </service>
    <service id="sylius.resource_controller.authorization_checker.disabled" class="Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker" public="false"/>
    <service id="sylius.resource_controller.flash_helper" class="Sylius\Bundle\ResourceBundle\Controller\FlashHelper" public="false">
      <argument type="service" id="session"/>
      <argument type="service" id="translator.default"/>
      <argument>en_US</argument>
    </service>
    <service id="sylius.resource_controller.event_dispatcher" class="Sylius\Bundle\ResourceBundle\Controller\EventDispatcher" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sylius.resource_controller.view_handler" class="Sylius\Bundle\ResourceBundle\Controller\ViewHandler" public="false">
      <argument type="service" id="fos_rest.view_handler.default"/>
    </service>
    <service id="sylius.resource_controller.state_machine" class="Sylius\Bundle\ResourceBundle\Controller\StateMachine" public="false">
      <argument type="service" id="sm.factory"/>
    </service>
    <service id="sylius.resource_controller.resource_update_handler" class="Sylius\Bundle\ResourceBundle\Controller\ResourceUpdateHandler" public="false">
      <argument type="service" id="sylius.resource_controller.state_machine"/>
    </service>
    <service id="sylius.resource_controller.resource_delete_handler" class="Sylius\Bundle\ResourceBundle\Controller\ResourceDeleteHandler" public="false"/>
    <service id="sylius.form.type.resource_autocomplete_choice" class="Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="sylius.registry.resource_repository"/>
    </service>
    <service id=".1_RouteFactory~gs6R4EF" class="Sylius\Bundle\ResourceBundle\Routing\RouteFactory" public="false"/>
    <service id="sylius.routing.loader.resource" class="Sylius\Bundle\ResourceBundle\Routing\ResourceLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id=".1_RouteFactory~gs6R4EF"/>
    </service>
    <service id="sylius.storage.session" class="Sylius\Bundle\ResourceBundle\Storage\SessionStorage" public="true">
      <argument type="service" id="session"/>
    </service>
    <service id="sylius.storage.cookie" class="Sylius\Bundle\ResourceBundle\Storage\CookieStorage" public="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sylius.random_generator" class="Sylius\Component\Resource\Generator\RandomnessGenerator" public="true"/>
    <service id="sylius.form.type_extension.form.request_handler" class="Sylius\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false"/>
    <service id="sylius.resource_registry" class="Sylius\Component\Resource\Metadata\Registry" public="false">
      <call method="addFromAliasAndConfiguration">
        <argument>odiseo_blog.article</argument>
        <argument type="collection">
          <argument key="driver">doctrine/orm</argument>
          <argument key="classes" type="collection">
            <argument key="model">Odiseo\BlogBundle\Model\Article</argument>
            <argument key="interface">Odiseo\BlogBundle\Model\ArticleInterface</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="repository">Odiseo\BlogBundle\Doctrine\ORM\ArticleRepository</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\TranslatableFactory</argument>
            <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleType</argument>
          </argument>
          <argument key="translation" type="collection">
            <argument key="classes" type="collection">
              <argument key="model">Odiseo\BlogBundle\Model\ArticleTranslation</argument>
              <argument key="interface">Odiseo\BlogBundle\Model\ArticleTranslationInterface</argument>
              <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
              <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
              <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleTranslationType</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>odiseo_blog.article_translation</argument>
        <argument type="collection">
          <argument key="driver">doctrine/orm</argument>
          <argument key="classes" type="collection">
            <argument key="model">Odiseo\BlogBundle\Model\ArticleTranslation</argument>
            <argument key="interface">Odiseo\BlogBundle\Model\ArticleTranslationInterface</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleTranslationType</argument>
          </argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>odiseo_blog.article_category</argument>
        <argument type="collection">
          <argument key="driver">doctrine/orm</argument>
          <argument key="classes" type="collection">
            <argument key="model">Odiseo\BlogBundle\Model\ArticleCategory</argument>
            <argument key="interface">Odiseo\BlogBundle\Model\ArticleCategoryInterface</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="repository">Odiseo\BlogBundle\Doctrine\ORM\ArticleCategoryRepository</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\TranslatableFactory</argument>
            <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryType</argument>
          </argument>
          <argument key="translation" type="collection">
            <argument key="classes" type="collection">
              <argument key="model">Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
              <argument key="interface">Odiseo\BlogBundle\Model\ArticleCategoryTranslationInterface</argument>
              <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
              <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
              <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addFromAliasAndConfiguration">
        <argument>odiseo_blog.article_category_translation</argument>
        <argument type="collection">
          <argument key="driver">doctrine/orm</argument>
          <argument key="classes" type="collection">
            <argument key="model">Odiseo\BlogBundle\Model\ArticleCategoryTranslation</argument>
            <argument key="interface">Odiseo\BlogBundle\Model\ArticleCategoryTranslationInterface</argument>
            <argument key="controller">Sylius\Bundle\ResourceBundle\Controller\ResourceController</argument>
            <argument key="factory">Sylius\Component\Resource\Factory\Factory</argument>
            <argument key="form">Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sylius.expression_language" class="Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sylius.form.extension.type.collection" class="Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension" public="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\CollectionType" extended-type="Symfony\Component\Form\Extension\Core\Type\CollectionType"/>
    </service>
    <service id="sylius.form.type.default" class="Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="sylius.registry.form_builder"/>
    </service>
    <service id="sylius.registry.resource_repository" class="Sylius\Component\Registry\ServiceRegistry" public="false">
      <argument>Sylius\Component\Resource\Repository\RepositoryInterface</argument>
      <argument>resource repository</argument>
      <call method="register">
        <argument>odiseo_blog.article</argument>
        <argument type="service" id="odiseo_blog.repository.article"/>
      </call>
      <call method="register">
        <argument>odiseo_blog.article_translation</argument>
        <argument type="service" id="odiseo_blog.repository.article_translation"/>
      </call>
      <call method="register">
        <argument>odiseo_blog.article_category</argument>
        <argument type="service" id="odiseo_blog.repository.article_category"/>
      </call>
      <call method="register">
        <argument>odiseo_blog.article_category_translation</argument>
        <argument type="service" id="odiseo_blog.repository.article_category_translation"/>
      </call>
    </service>
    <service id="sylius.registry.form_builder" class="Sylius\Component\Registry\ServiceRegistry" public="false">
      <argument>Sylius\Bundle\ResourceBundle\Form\Builder\DefaultFormBuilderInterface</argument>
      <argument>form builder</argument>
      <call method="register">
        <argument>doctrine/orm</argument>
        <argument type="service" id="sylius.form_builder.default"/>
      </call>
    </service>
    <service id="sylius.grid.resource_view_factory" class="Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactory" public="true">
      <argument type="service" id="sylius.grid.data_provider"/>
      <argument type="service" id="sylius.resource_controller.parameters_parser"/>
    </service>
    <service id="sylius.resource_controller.resources_resolver.grid_aware" class="Sylius\Bundle\ResourceBundle\Grid\Controller\ResourcesResolver" public="true">
      <argument type="service" id="sylius.resource_controller.resources_resolver.grid_aware.inner"/>
      <argument type="service" id="sylius.grid.provider"/>
      <argument type="service" id="sylius.grid.resource_view_factory"/>
    </service>
    <service id="sylius.custom_grid_renderer.twig" class="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer" public="true">
      <argument type="service" id="sylius.custom_grid_renderer.twig.inner"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.grid_options_parser"/>
      <argument type="collection"/>
    </service>
    <service id="sylius.custom_bulk_action_grid_renderer.twig" class="Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigBulkActionGridRenderer" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.grid_options_parser"/>
      <argument type="collection"/>
    </service>
    <service id="sylius.grid_options_parser" class="Sylius\Bundle\ResourceBundle\Grid\Parser\OptionsParser" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="sylius.expression_language"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sylius.translation_locale_provider.immutable" class="Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider" public="true">
      <argument type="collection">
        <argument>en_US</argument>
      </argument>
      <argument>en_US</argument>
    </service>
    <service id="sylius.translation.translatable_listener.doctrine.orm" class="Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener" public="true">
      <tag name="doctrine.event_subscriber" connection="default" priority="99"/>
      <argument type="service" id="sylius.resource_registry"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sylius.form.type.resource_translations" class="Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="sylius.translation_locale_provider.immutable"/>
    </service>
    <service id="sylius.translatable_entity_locale_assigner" class="Sylius\Component\Resource\Translation\TranslatableEntityLocaleAssigner" public="true">
      <argument type="service" id="sylius.translation_locale_provider.immutable"/>
    </service>
    <service id="sylius.event_subscriber.orm_mapped_super_class" class="Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber" public="true">
      <tag name="doctrine.event_subscriber" priority="8192"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.event_subscriber.orm_repository_class" class="Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber" public="true">
      <tag name="doctrine.event_subscriber" priority="8192"/>
      <argument type="service" id="sylius.resource_registry"/>
    </service>
    <service id="sylius.form_builder.default" class="Sylius\Bundle\ResourceBundle\Doctrine\ORM\Form\Builder\DefaultFormBuilder" public="false">
      <tag name="sylius.default_resource_form.builder" type="doctrine/orm"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="sylius.grid_field.datetime" class="Sylius\Component\Grid\FieldTypes\DatetimeFieldType" public="true">
      <tag name="sylius.grid_field" type="datetime"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
    </service>
    <service id="sylius.grid_field.string" class="Sylius\Component\Grid\FieldTypes\StringFieldType" public="true">
      <tag name="sylius.grid_field" type="string"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
    </service>
    <service id="sylius.grid_field.twig" class="Sylius\Bundle\GridBundle\FieldTypes\TwigFieldType" public="true">
      <tag name="sylius.grid_field" type="twig"/>
      <argument type="service" id="sylius.grid.data_extractor.property_access"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sylius.form_registry.grid_filter" class="Sylius\Bundle\GridBundle\Form\Registry\FormTypeRegistry" public="false">
      <call method="add">
        <argument>string</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType</argument>
      </call>
      <call method="add">
        <argument>boolean</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType</argument>
      </call>
      <call method="add">
        <argument>date</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType</argument>
      </call>
      <call method="add">
        <argument>entity</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType</argument>
      </call>
      <call method="add">
        <argument>money</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType</argument>
      </call>
      <call method="add">
        <argument>exists</argument>
        <argument>default</argument>
        <argument>Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType</argument>
      </call>
    </service>
    <service id="sylius.grid_filter.string" class="Sylius\Component\Grid\Filter\StringFilter" public="true">
      <tag name="sylius.grid_filter" type="string" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.string" class="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.boolean" class="Sylius\Component\Grid\Filter\BooleanFilter" public="true">
      <tag name="sylius.grid_filter" type="boolean" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.boolean" class="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.date" class="Sylius\Component\Grid\Filter\DateFilter" public="true">
      <tag name="sylius.grid_filter" type="date" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.date" class="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.entity" class="Sylius\Component\Grid\Filter\EntityFilter" public="true">
      <tag name="sylius.grid_filter" type="entity" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.entity" class="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.money" class="Sylius\Component\Grid\Filter\MoneyFilter" public="true">
      <tag name="sylius.grid_filter" type="money" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.money" class="Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.grid_filter.exists" class="Sylius\Component\Grid\Filter\ExistsFilter" public="true">
      <tag name="sylius.grid_filter" type="exists" form_type="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" form-type="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType"/>
    </service>
    <service id="sylius.form.type.grid_filter.exists" class="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" public="true">
      <tag name="form.type"/>
    </service>
    <service id="sylius.templating.helper.grid" class="Sylius\Bundle\GridBundle\Templating\Helper\GridHelper" public="true" lazy="true">
      <tag name="templating.helper" alias="sylius_grid"/>
      <argument type="service" id="sylius.custom_grid_renderer.twig"/>
    </service>
    <service id="sylius.templating.helper.bulk_action_grid" class="Sylius\Bundle\GridBundle\Templating\Helper\BulkActionGridHelper" public="true" lazy="true">
      <tag name="templating.helper" alias="sylius_bulk_action_grid"/>
      <argument type="service" id="sylius.custom_bulk_action_grid_renderer.twig"/>
    </service>
    <service id="sylius.twig.extension.grid" class="Sylius\Bundle\GridBundle\Twig\GridExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sylius.templating.helper.grid"/>
    </service>
    <service id="sylius.twig.extension.bulk_action_grid" class="Sylius\Bundle\GridBundle\Twig\BulkActionGridExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sylius.templating.helper.bulk_action_grid"/>
    </service>
    <service id="sylius.grid.data_extractor.property_access" class="Sylius\Component\Grid\DataExtractor\PropertyAccessDataExtractor" public="true">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sylius.grid.array_to_definition_converter" class="Sylius\Component\Grid\Definition\ArrayToDefinitionConverter" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sylius.grid.provider" class="Sylius\Component\Grid\Provider\ArrayGridProvider" public="true">
      <argument type="service" id="sylius.grid.array_to_definition_converter"/>
      <argument type="collection"/>
    </service>
    <service id="sylius.grid.view_factory" class="Sylius\Component\Grid\View\GridViewFactory" public="true">
      <argument type="service" id="sylius.grid.data_provider"/>
    </service>
    <service id="sylius.grid.data_provider" class="Sylius\Component\Grid\Data\DataProvider" public="true">
      <argument type="service" id="sylius.grid.data_source_provider"/>
      <argument type="service" id="sylius.grid.filters_applicator"/>
      <argument type="service" id="sylius.grid.sorter"/>
    </service>
    <service id="sylius.grid.filters_criteria_resolver" class="Sylius\Component\Grid\Filtering\FiltersCriteriaResolver" public="true"/>
    <service id="sylius.grid.filters_applicator" class="Sylius\Component\Grid\Filtering\FiltersApplicator" public="true">
      <argument type="service" id="sylius.registry.grid_filter"/>
      <argument type="service" id="sylius.grid.filters_criteria_resolver"/>
    </service>
    <service id="sylius.grid.sorter" class="Sylius\Component\Grid\Sorting\Sorter" public="true"/>
    <service id="sylius.grid.data_source_provider" class="Sylius\Component\Grid\Data\DataSourceProvider" public="true">
      <argument type="service" id="sylius.registry.grid_driver"/>
    </service>
    <service id="sylius.registry.grid_driver" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\Data\DriverInterface</argument>
      <argument>grid driver</argument>
      <call method="register">
        <argument>doctrine/orm</argument>
        <argument type="service" id="sylius.grid_driver.doctrine.orm"/>
      </call>
      <call method="register">
        <argument>doctrine/dbal</argument>
        <argument type="service" id="sylius.grid_driver.doctrine.dbal"/>
      </call>
    </service>
    <service id="sylius.registry.grid_filter" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\Filtering\FilterInterface</argument>
      <argument>grid filter</argument>
      <call method="register">
        <argument>string</argument>
        <argument type="service" id="sylius.grid_filter.string"/>
      </call>
      <call method="register">
        <argument>boolean</argument>
        <argument type="service" id="sylius.grid_filter.boolean"/>
      </call>
      <call method="register">
        <argument>date</argument>
        <argument type="service" id="sylius.grid_filter.date"/>
      </call>
      <call method="register">
        <argument>entity</argument>
        <argument type="service" id="sylius.grid_filter.entity"/>
      </call>
      <call method="register">
        <argument>money</argument>
        <argument type="service" id="sylius.grid_filter.money"/>
      </call>
      <call method="register">
        <argument>exists</argument>
        <argument type="service" id="sylius.grid_filter.exists"/>
      </call>
    </service>
    <service id="sylius.registry.grid_field" class="Sylius\Component\Registry\ServiceRegistry" public="true">
      <argument>Sylius\Component\Grid\FieldTypes\FieldTypeInterface</argument>
      <argument>grid field</argument>
      <call method="register">
        <argument>datetime</argument>
        <argument type="service" id="sylius.grid_field.datetime"/>
      </call>
      <call method="register">
        <argument>string</argument>
        <argument type="service" id="sylius.grid_field.string"/>
      </call>
      <call method="register">
        <argument>twig</argument>
        <argument type="service" id="sylius.grid_field.twig"/>
      </call>
    </service>
    <service id="sylius.grid_driver.doctrine.orm" class="Sylius\Bundle\GridBundle\Doctrine\ORM\Driver" public="true">
      <tag name="sylius.grid_driver" alias="doctrine/orm"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sylius.grid_driver.doctrine.dbal" class="Sylius\Bundle\GridBundle\Doctrine\DBAL\Driver" public="true">
      <tag name="sylius.grid_driver" alias="doctrine/dbal"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="white_october_pagerfanta.view_factory" class="Pagerfanta\View\ViewFactory">
      <call method="add">
        <argument type="collection">
          <argument key="default" type="service" id="pagerfanta.view.default"/>
          <argument key="default_translated" type="service" id="pagerfanta.view.default_translated"/>
          <argument key="twitter_bootstrap" type="service" id="pagerfanta.view.twitter_bootstrap"/>
          <argument key="twitter_bootstrap3" type="service" id="pagerfanta.view.twitter_bootstrap3"/>
          <argument key="twitter_bootstrap4" type="service" id="pagerfanta.view.twitter_bootstrap4"/>
          <argument key="semantic_ui" type="service" id="pagerfanta.view.semantic_ui"/>
          <argument key="twitter_bootstrap4_translated" type="service" id="pagerfanta.view.twitter_bootstrap4_translated"/>
          <argument key="twitter_bootstrap3_translated" type="service" id="pagerfanta.view.twitter_bootstrap3_translated"/>
          <argument key="twitter_bootstrap_translated" type="service" id="pagerfanta.view.twitter_bootstrap_translated"/>
          <argument key="semantic_ui_translated" type="service" id="pagerfanta.view.semantic_ui_translated"/>
        </argument>
      </call>
    </service>
    <service id="pagerfanta.view.default" class="Pagerfanta\View\DefaultView" public="false">
      <tag name="pagerfanta.view" alias="default"/>
    </service>
    <service id="pagerfanta.view.default_translated" class="WhiteOctober\PagerfantaBundle\View\DefaultTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="default_translated"/>
      <argument type="service" id="pagerfanta.view.default"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap" class="Pagerfanta\View\TwitterBootstrapView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3" class="Pagerfanta\View\TwitterBootstrap3View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4" class="Pagerfanta\View\TwitterBootstrap4View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4"/>
    </service>
    <service id="pagerfanta.view.semantic_ui" class="Pagerfanta\View\SemanticUiView" public="false">
      <tag name="pagerfanta.view" alias="semantic_ui"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrap4TranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap4"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrap3TranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap3"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrapTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="pagerfanta.view.semantic_ui_translated" class="WhiteOctober\PagerfantaBundle\View\SemanticUiTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="semantic_ui_translated"/>
      <argument type="service" id="pagerfanta.view.semantic_ui"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="twig.extension.pagerfanta" class="WhiteOctober\PagerfantaBundle\Twig\PagerfantaExtension" public="false">
      <tag name="twig.extension"/>
      <argument>default</argument>
      <argument type="service" id="white_october_pagerfanta.view_factory"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener" class="WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="pagerfanta.convert_not_valid_current_page_to_not_found_listener" class="WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id=".service_locator.9_yeNH1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.yQVjGlt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.gmwRZ3h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.mzpr0gr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Odiseo\BlogBundle\Form\Type\ArticleCategoryTranslationType" type="service" id="odiseo_blog.form.type.article_category_translation"/>
        <argument key="Odiseo\BlogBundle\Form\Type\ArticleCategoryType" type="service" id="odiseo_blog.form.type.article_category"/>
        <argument key="Odiseo\BlogBundle\Form\Type\ArticleTranslationType" type="service" id="odiseo_blog.form.type.article_translation"/>
        <argument key="Odiseo\BlogBundle\Form\Type\ArticleType" type="service" id="odiseo_blog.form.type.article"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType" type="service" id="sylius.form.type.grid_filter.boolean"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType" type="service" id="sylius.form.type.grid_filter.date"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType" type="service" id="sylius.form.type.grid_filter.entity"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType" type="service" id="sylius.form.type.grid_filter.exists"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType" type="service" id="sylius.form.type.grid_filter.money"/>
        <argument key="Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType" type="service" id="sylius.form.type.grid_filter.string"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType" type="service" id="sylius.form.type.default"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType" type="service" id="sylius.form.type.resource_autocomplete_choice"/>
        <argument key="Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType" type="service" id="sylius.form.type.resource_translations"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.firephp"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.serializer.form_error_handler.inner"/>
    </service>
    <service id="sylius.form.type_extension.form.request_handler.inner" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="sylius.resource_controller.resources_resolver.grid_aware.inner" class="Sylius\Bundle\ResourceBundle\Controller\ResourcesResolver" public="false"/>
    <service id="sylius.custom_grid_renderer.twig.inner" class="Sylius\Bundle\GridBundle\Renderer\TwigGridRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="sylius.registry.grid_field"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sylius.form_registry.grid_filter"/>
      <argument>SyliusGridBundle::_grid.html.twig</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="sylius.custom_bulk_action_grid_renderer.twig.inner" class="Sylius\Bundle\GridBundle\Renderer\TwigBulkActionGridRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="collection"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.9_yeNH1"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="fos_rest.serializer.form_error_handler.inner" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id=".service_locator.3nNxzEJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.3nNxzEJ.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.3nNxzEJ" method="withContext"/>
    </service>
    <service id=".service_locator.oNnsU_h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.oNnsU_h.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.oNnsU_h" method="withContext"/>
    </service>
    <service id=".service_locator.tdKlFgs" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.tdKlFgs.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tdKlFgs" method="withContext"/>
    </service>
    <service id=".service_locator.UEpceA5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.UEpceA5.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.UEpceA5" method="withContext"/>
    </service>
    <service id=".service_locator.UEpceA5.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.UEpceA5" method="withContext"/>
    </service>
    <service id=".service_locator.Af1b9SX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.t9lbV1Z"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="server:log">web_server.command.server_log</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
      </argument>
    </service>
    <service id=".service_locator.t9lbV1Z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id=".service_locator.CS9cV_I" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id=".service_locator.hyjeIN3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hateoas.event_subscriber.json" type="service" id="hateoas.event_subscriber.json"/>
        <argument key="hateoas.event_subscriber.xml" type="service" id="hateoas.event_subscriber.xml"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.mQKuaEF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.serializer.exception_normalizer.jms" type="service" id="fos_rest.serializer.exception_normalizer.jms"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service" id="fos_rest.serializer.form_error_handler"/>
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.php_collection_handler" type="service" id="jms_serializer.php_collection_handler"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="odiseo_blog.manager.article" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="odiseo_blog.manager.article_translation" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="odiseo_blog.manager.article_category" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="odiseo_blog.manager.article_category_translation" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.mock_file" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.mock_file"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem" public="true"/>
    <service id="templating" alias="templating.engine.twig" public="true"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache" public="true"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache" public="true"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache" public="true"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.cache_naming_strategy"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.expression"/>
    <service id="hateoas.configuration.provider.resolver" alias="hateoas.configuration.provider.resolver.chain"/>
    <service id="hateoas.configuration.metadata.cache" alias="hateoas.configuration.metadata.cache.file_cache" public="false"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.router" alias="router.default"/>
    <service id="fos_rest.templating" alias="templating.engine.twig"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="sylius.translation_locale_provider" alias="sylius.translation_locale_provider.immutable" public="true"/>
    <service id="sylius.resource_controller.authorization_checker" alias="sylius.resource_controller.authorization_checker.disabled"/>
    <service id="sylius.grid.renderer" alias="sylius.custom_grid_renderer.twig"/>
    <service id="sylius.grid.bulk_action_renderer" alias="sylius.custom_bulk_action_grid_renderer.twig"/>
    <service id="sylius.grid.data_extractor" alias="sylius.grid.data_extractor.property_access"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.9_yeNH1"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.jms"/>
    <service id=".service_locator.XzhyEv6" alias=".1_ServiceLocator~DSAbBY0" public="false"/>
    <service id=".service_locator.AoifO_3" alias=".2_ServiceLocator~rFkAA2T" public="false"/>
    <service id="form.type_extension.form.request_handler" alias="sylius.form.type_extension.form.request_handler" public="false"/>
    <service id="sylius.resource_controller.resources_resolver" alias="sylius.resource_controller.resources_resolver.grid_aware" public="false"/>
    <service id="sylius.grid.renderer.twig" alias="sylius.custom_grid_renderer.twig" public="true"/>
    <service id="sylius.grid.bulk_action_renderer.twig" alias="sylius.custom_bulk_action_grid_renderer.twig" public="true"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="jms_serializer.form_error_handler" alias="fos_rest.serializer.form_error_handler" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.contains_command" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.delete_command" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.flush_command" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.stats_command" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.diff_command" alias="doctrine_migrations.diff_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.execute_command" alias="doctrine_migrations.execute_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.generate_command" alias="doctrine_migrations.generate_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.latest_command" alias="doctrine_migrations.latest_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.migrate_command" alias="doctrine_migrations.migrate_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.status_command" alias="doctrine_migrations.status_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.version_command" alias="doctrine_migrations.version_command" public="true"/>
    <service id="fos_rest.serializer.jms_handler_registry" alias="jms_serializer.handler_registry" public="true"/>
  </services>
</container>
